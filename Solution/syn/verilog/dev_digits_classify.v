// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dev_digits_classify,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.677437,HLS_SYN_LAT=340389,HLS_SYN_TPT=none,HLS_SYN_MEM=25,HLS_SYN_DSP=10,HLS_SYN_FF=2675,HLS_SYN_LUT=6835,HLS_VERSION=2018_2}" *)

module dev_digits_classify (
        ap_clk,
        ap_rst_n,
        s_axi_a_AWVALID,
        s_axi_a_AWREADY,
        s_axi_a_AWADDR,
        s_axi_a_WVALID,
        s_axi_a_WREADY,
        s_axi_a_WDATA,
        s_axi_a_WSTRB,
        s_axi_a_ARVALID,
        s_axi_a_ARREADY,
        s_axi_a_ARADDR,
        s_axi_a_RVALID,
        s_axi_a_RREADY,
        s_axi_a_RDATA,
        s_axi_a_RRESP,
        s_axi_a_BVALID,
        s_axi_a_BREADY,
        s_axi_a_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 63'd1;
parameter    ap_ST_fsm_state2 = 63'd2;
parameter    ap_ST_fsm_state3 = 63'd4;
parameter    ap_ST_fsm_state4 = 63'd8;
parameter    ap_ST_fsm_state5 = 63'd16;
parameter    ap_ST_fsm_state6 = 63'd32;
parameter    ap_ST_fsm_state7 = 63'd64;
parameter    ap_ST_fsm_state8 = 63'd128;
parameter    ap_ST_fsm_state9 = 63'd256;
parameter    ap_ST_fsm_state10 = 63'd512;
parameter    ap_ST_fsm_state11 = 63'd1024;
parameter    ap_ST_fsm_state12 = 63'd2048;
parameter    ap_ST_fsm_state13 = 63'd4096;
parameter    ap_ST_fsm_state14 = 63'd8192;
parameter    ap_ST_fsm_state15 = 63'd16384;
parameter    ap_ST_fsm_state16 = 63'd32768;
parameter    ap_ST_fsm_state17 = 63'd65536;
parameter    ap_ST_fsm_state18 = 63'd131072;
parameter    ap_ST_fsm_state19 = 63'd262144;
parameter    ap_ST_fsm_state20 = 63'd524288;
parameter    ap_ST_fsm_state21 = 63'd1048576;
parameter    ap_ST_fsm_state22 = 63'd2097152;
parameter    ap_ST_fsm_state23 = 63'd4194304;
parameter    ap_ST_fsm_state24 = 63'd8388608;
parameter    ap_ST_fsm_state25 = 63'd16777216;
parameter    ap_ST_fsm_state26 = 63'd33554432;
parameter    ap_ST_fsm_state27 = 63'd67108864;
parameter    ap_ST_fsm_state28 = 63'd134217728;
parameter    ap_ST_fsm_state29 = 63'd268435456;
parameter    ap_ST_fsm_state30 = 63'd536870912;
parameter    ap_ST_fsm_state31 = 63'd1073741824;
parameter    ap_ST_fsm_state32 = 63'd2147483648;
parameter    ap_ST_fsm_state33 = 63'd4294967296;
parameter    ap_ST_fsm_state34 = 63'd8589934592;
parameter    ap_ST_fsm_state35 = 63'd17179869184;
parameter    ap_ST_fsm_state36 = 63'd34359738368;
parameter    ap_ST_fsm_state37 = 63'd68719476736;
parameter    ap_ST_fsm_state38 = 63'd137438953472;
parameter    ap_ST_fsm_state39 = 63'd274877906944;
parameter    ap_ST_fsm_state40 = 63'd549755813888;
parameter    ap_ST_fsm_state41 = 63'd1099511627776;
parameter    ap_ST_fsm_state42 = 63'd2199023255552;
parameter    ap_ST_fsm_state43 = 63'd4398046511104;
parameter    ap_ST_fsm_state44 = 63'd8796093022208;
parameter    ap_ST_fsm_state45 = 63'd17592186044416;
parameter    ap_ST_fsm_state46 = 63'd35184372088832;
parameter    ap_ST_fsm_state47 = 63'd70368744177664;
parameter    ap_ST_fsm_state48 = 63'd140737488355328;
parameter    ap_ST_fsm_state49 = 63'd281474976710656;
parameter    ap_ST_fsm_state50 = 63'd562949953421312;
parameter    ap_ST_fsm_state51 = 63'd1125899906842624;
parameter    ap_ST_fsm_state52 = 63'd2251799813685248;
parameter    ap_ST_fsm_state53 = 63'd4503599627370496;
parameter    ap_ST_fsm_state54 = 63'd9007199254740992;
parameter    ap_ST_fsm_state55 = 63'd18014398509481984;
parameter    ap_ST_fsm_state56 = 63'd36028797018963968;
parameter    ap_ST_fsm_state57 = 63'd72057594037927936;
parameter    ap_ST_fsm_state58 = 63'd144115188075855872;
parameter    ap_ST_fsm_state59 = 63'd288230376151711744;
parameter    ap_ST_fsm_state60 = 63'd576460752303423488;
parameter    ap_ST_fsm_state61 = 63'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 63'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 63'd4611686018427387904;
parameter    C_S_AXI_A_DATA_WIDTH = 32;
parameter    C_S_AXI_A_ADDR_WIDTH = 13;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_A_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_a_AWVALID;
output   s_axi_a_AWREADY;
input  [C_S_AXI_A_ADDR_WIDTH - 1:0] s_axi_a_AWADDR;
input   s_axi_a_WVALID;
output   s_axi_a_WREADY;
input  [C_S_AXI_A_DATA_WIDTH - 1:0] s_axi_a_WDATA;
input  [C_S_AXI_A_WSTRB_WIDTH - 1:0] s_axi_a_WSTRB;
input   s_axi_a_ARVALID;
output   s_axi_a_ARREADY;
input  [C_S_AXI_A_ADDR_WIDTH - 1:0] s_axi_a_ARADDR;
output   s_axi_a_RVALID;
input   s_axi_a_RREADY;
output  [C_S_AXI_A_DATA_WIDTH - 1:0] s_axi_a_RDATA;
output  [1:0] s_axi_a_RRESP;
output   s_axi_a_BVALID;
input   s_axi_a_BREADY;
output  [1:0] s_axi_a_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] input_V_q0;
wire   [3:0] softmax_out_V_address0;
reg    softmax_out_V_ce0;
reg    softmax_out_V_we0;
wire   [3:0] biases_dense10_V_address0;
reg    biases_dense10_V_ce0;
wire   [6:0] biases_dense10_V_q0;
wire   [9:0] weights_dense10_V_address0;
reg    weights_dense10_V_ce0;
wire   [8:0] weights_dense10_V_q0;
wire   [3:0] j_1_fu_426_p2;
reg   [3:0] j_1_reg_1998;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_fu_432_p1;
reg   [63:0] tmp_reg_2003;
wire   [0:0] exitcond1_fu_420_p2;
wire   [6:0] i_1_fu_476_p2;
reg   [6:0] i_1_reg_2016;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond2_fu_470_p2;
wire   [9:0] p_shl_cast_fu_499_p1;
reg   [9:0] p_shl_cast_reg_2026;
wire    ap_CS_fsm_state8;
wire   [7:0] p_shl3_cast_fu_509_p1;
reg   [7:0] p_shl3_cast_reg_2031;
wire  signed [20:0] OP1_V_fu_513_p1;
reg  signed [20:0] OP1_V_reg_2036;
wire   [3:0] j_2_fu_527_p2;
reg   [3:0] j_2_reg_2044;
wire    ap_CS_fsm_state9;
wire   [0:0] exitcond4_fu_521_p2;
reg  signed [8:0] weights_dense10_V_lo_reg_2054;
wire    ap_CS_fsm_state10;
wire  signed [20:0] p_Val2_4_fu_1989_p2;
reg  signed [20:0] p_Val2_4_reg_2059;
wire    ap_CS_fsm_state11;
reg   [3:0] condensed_10_out_V_a_1_reg_2064;
reg   [0:0] tmp_79_reg_2069;
reg   [0:0] signbit_reg_2074;
wire    ap_CS_fsm_state12;
reg   [11:0] p_Val2_6_reg_2083;
reg   [0:0] tmp_80_reg_2088;
wire   [3:0] i_3_fu_746_p2;
reg   [3:0] i_3_reg_2097;
wire    ap_CS_fsm_state14;
reg   [3:0] condensed_10_out_V_a_2_reg_2102;
wire   [0:0] exitcond3_fu_740_p2;
wire  signed [18:0] tmp_26_tr_cast_fu_757_p1;
reg  signed [18:0] tmp_26_tr_cast_reg_2107;
wire   [11:0] condensed_10_out_V_q0;
reg   [11:0] p_Val2_2_reg_2112;
wire    ap_CS_fsm_state15;
reg   [0:0] is_neg_reg_2119;
wire   [0:0] tmp_3_fu_769_p2;
reg   [0:0] tmp_3_reg_2125;
wire    ap_CS_fsm_state16;
wire   [11:0] p_Val2_7_fu_779_p3;
reg   [11:0] p_Val2_7_reg_2130;
wire   [30:0] tmp_15_fu_817_p1;
reg   [30:0] tmp_15_reg_2136;
reg   [0:0] tmp_19_reg_2141;
wire   [7:0] tmp_53_fu_829_p1;
reg   [7:0] tmp_53_reg_2146;
wire   [31:0] tmp32_V_3_fu_897_p3;
reg   [31:0] tmp32_V_3_reg_2151;
wire    ap_CS_fsm_state17;
wire   [31:0] tmp32_V_6_fu_905_p1;
reg   [31:0] tmp32_V_6_reg_2156;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_13_fu_919_p2;
reg   [0:0] tmp_13_reg_2161;
wire   [31:0] p_x_assign_fu_963_p3;
reg   [31:0] p_x_assign_reg_2166;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_415_p2;
reg   [31:0] v_assign_reg_2171;
wire    ap_CS_fsm_state33;
reg   [0:0] isneg_reg_2176;
wire    ap_CS_fsm_state34;
reg   [10:0] exp_tmp_V_reg_2186;
wire   [51:0] tmp_63_fu_996_p1;
reg   [51:0] tmp_63_reg_2191;
wire   [0:0] tmp_24_fu_1000_p2;
reg   [0:0] tmp_24_reg_2196;
wire   [11:0] tmp_20_fu_1006_p1;
reg   [11:0] tmp_20_reg_2204;
wire    ap_CS_fsm_state35;
wire   [53:0] p_Result_6_fu_1016_p1;
reg   [53:0] p_Result_6_reg_2209;
wire   [53:0] man_V_1_fu_1020_p2;
reg   [53:0] man_V_1_reg_2214;
wire   [11:0] F2_fu_1026_p2;
reg   [11:0] F2_reg_2219;
wire   [0:0] QUAN_INC_fu_1042_p2;
reg   [0:0] QUAN_INC_reg_2228;
wire  signed [11:0] sh_amt_fu_1060_p3;
reg  signed [11:0] sh_amt_reg_2234;
wire   [0:0] tmp_37_fu_1068_p2;
reg   [0:0] tmp_37_reg_2241;
wire  signed [31:0] sh_amt_cast_fu_1084_p1;
reg  signed [31:0] sh_amt_cast_reg_2246;
wire    ap_CS_fsm_state36;
wire   [0:0] tmp_27_fu_1087_p2;
reg   [0:0] tmp_27_reg_2251;
wire  signed [11:0] tmp_65_fu_1092_p1;
reg  signed [11:0] tmp_65_reg_2257;
reg   [0:0] tmp_69_reg_2263;
wire   [11:0] p_Val2_14_fu_1170_p2;
reg   [11:0] p_Val2_14_reg_2269;
reg   [0:0] tmp_70_reg_2275;
wire   [0:0] sel_tmp8_fu_1189_p2;
reg   [0:0] sel_tmp8_reg_2281;
wire   [0:0] tmp_42_fu_1208_p2;
reg   [0:0] tmp_42_reg_2288;
wire  signed [11:0] pos1_fu_1214_p2;
reg  signed [11:0] pos1_reg_2294;
wire   [0:0] tmp_43_fu_1232_p2;
reg   [0:0] tmp_43_reg_2299;
wire   [0:0] rev_fu_1246_p2;
reg   [0:0] rev_reg_2306;
wire   [0:0] Range1_all_ones_1_fu_1272_p2;
reg   [0:0] Range1_all_ones_1_reg_2313;
reg   [0:0] tmp_74_reg_2320;
wire   [0:0] tmp_47_fu_1286_p2;
reg   [0:0] tmp_47_reg_2325;
wire   [53:0] tmp_48_fu_1292_p1;
reg   [53:0] tmp_48_reg_2331;
wire   [53:0] Range2_V_1_fu_1296_p2;
reg   [53:0] Range2_V_1_reg_2336;
wire   [0:0] Range1_all_zeros_1_fu_1308_p2;
reg   [0:0] Range1_all_zeros_1_reg_2342;
wire   [0:0] sel_tmp11_fu_1326_p2;
reg   [0:0] sel_tmp11_reg_2347;
wire   [11:0] p_Val2_15_fu_1390_p3;
reg   [11:0] p_Val2_15_reg_2353;
wire    ap_CS_fsm_state37;
wire   [0:0] neg_src_0_i_i_fu_1607_p3;
reg   [0:0] neg_src_0_i_i_reg_2360;
wire   [0:0] overflow_1_fu_1637_p2;
reg   [0:0] overflow_1_reg_2366;
wire   [0:0] brmerge121_demorgan_s_fu_1643_p2;
reg   [0:0] brmerge121_demorgan_s_reg_2372;
wire   [11:0] sum_V_fu_1823_p3;
wire    ap_CS_fsm_state38;
wire   [3:0] i_2_fu_1837_p2;
reg   [3:0] i_2_reg_2386;
wire    ap_CS_fsm_state39;
wire   [63:0] tmp_4_fu_1843_p1;
reg   [63:0] tmp_4_reg_2391;
wire   [0:0] exitcond_fu_1831_p2;
wire    ap_CS_fsm_state40;
wire   [8:0] this_assign_7_1_fu_1981_p3;
reg   [8:0] this_assign_7_1_reg_2406;
wire    ap_CS_fsm_state62;
reg   [8:0] max_pooled_out_V_address0;
reg    max_pooled_out_V_ce0;
reg    max_pooled_out_V_we0;
wire   [11:0] max_pooled_out_V_q0;
reg   [5:0] condensed_64_out_address0;
reg    condensed_64_out_ce0;
reg    condensed_64_out_we0;
wire   [11:0] condensed_64_out_q0;
reg   [3:0] condensed_10_out_V_address0;
reg    condensed_10_out_V_ce0;
reg    condensed_10_out_V_we0;
reg   [11:0] condensed_10_out_V_d0;
wire    grp_convolve_fu_387_ap_start;
wire    grp_convolve_fu_387_ap_done;
wire    grp_convolve_fu_387_ap_idle;
wire    grp_convolve_fu_387_ap_ready;
wire   [9:0] grp_convolve_fu_387_in_V_address0;
wire    grp_convolve_fu_387_in_V_ce0;
wire   [8:0] grp_convolve_fu_387_outpool_V_address0;
wire    grp_convolve_fu_387_outpool_V_ce0;
wire    grp_convolve_fu_387_outpool_V_we0;
wire   [11:0] grp_convolve_fu_387_outpool_V_d0;
wire    grp_densifyto64_fu_399_ap_start;
wire    grp_densifyto64_fu_399_ap_done;
wire    grp_densifyto64_fu_399_ap_idle;
wire    grp_densifyto64_fu_399_ap_ready;
wire   [8:0] grp_densifyto64_fu_399_in_V_address0;
wire    grp_densifyto64_fu_399_in_V_ce0;
wire   [5:0] grp_densifyto64_fu_399_out_V_address0;
wire    grp_densifyto64_fu_399_out_V_ce0;
wire    grp_densifyto64_fu_399_out_V_we0;
wire   [11:0] grp_densifyto64_fu_399_out_V_d0;
reg   [3:0] j_reg_318;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
reg   [6:0] i_reg_329;
reg   [3:0] j3_reg_341;
wire    ap_CS_fsm_state13;
reg  signed [11:0] p_Val2_17_reg_353;
reg   [3:0] i4_reg_365;
reg   [3:0] i5_reg_376;
wire    ap_CS_fsm_state63;
reg    grp_convolve_fu_387_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_densifyto64_fu_399_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_8_fu_482_p1;
wire   [63:0] tmp_10_fu_547_p1;
wire   [63:0] tmp_7_fu_552_p1;
wire   [63:0] tmp_s_fu_752_p1;
wire  signed [11:0] p_Val2_2_cast_fu_465_p1;
wire   [11:0] this_assign_5_1_fu_731_p3;
wire  signed [11:0] p_Val2_16_fu_1732_p3;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state25;
wire   [5:0] tmp_1_fu_437_p4;
wire   [0:0] tmp_2_fu_451_p1;
wire  signed [6:0] p_Val2_1_cast_cast_fu_447_p1;
wire   [6:0] tmp_6_cast_cast_fu_455_p1;
wire   [6:0] p_Val2_1_fu_459_p2;
wire   [5:0] tmp_5_fu_487_p1;
wire   [8:0] p_shl_fu_491_p3;
wire   [6:0] tmp_9_fu_503_p2;
wire   [7:0] j3_cast_fu_517_p1;
wire   [7:0] tmp10_fu_533_p2;
wire   [9:0] tmp69_cast_fu_538_p1;
wire   [9:0] index_fu_542_p2;
wire   [19:0] tmp_12_fu_567_p3;
wire  signed [20:0] tmp_12_cast_fu_575_p1;
(* use_dsp48 = "no" *) wire   [20:0] p_Val2_5_fu_579_p2;
wire   [11:0] tmp_16_fu_610_p1;
wire   [11:0] p_Val2_8_fu_613_p2;
wire   [0:0] newsignbit_fu_618_p3;
wire   [0:0] tmp_21_fu_626_p2;
wire   [0:0] p_Result_4_not_fu_637_p2;
wire   [0:0] not_carry_fu_642_p2;
wire   [0:0] carry_fu_632_p2;
wire   [0:0] deleted_zeros_fu_648_p2;
wire   [0:0] p_not_i_i_fu_663_p2;
wire   [0:0] brmerge_i_i1_fu_669_p2;
wire   [0:0] tmp_31_fu_653_p2;
wire   [0:0] p_38_i_i_fu_658_p2;
wire   [0:0] brmerge40_demorgan_i_fu_681_p2;
wire   [0:0] tmp70_demorgan_fu_686_p2;
wire   [0:0] underflow_fu_692_p2;
wire   [0:0] overflow_fu_675_p2;
wire   [0:0] tmp11_fu_703_p2;
wire   [0:0] brmerge_i_i_i_fu_697_p2;
wire   [0:0] underflow_not_fu_709_p2;
wire   [11:0] p_Val2_8_mux_fu_715_p3;
wire   [11:0] p_Val2_8_31_fu_723_p3;
wire   [11:0] tmp_6_fu_774_p2;
reg   [11:0] p_Result_3_fu_785_p4;
wire   [31:0] p_Result_4_fu_795_p3;
reg   [31:0] num_zeros_fu_803_p3;
wire   [31:0] msb_idx_fu_811_p2;
wire   [30:0] msb_idx_1_fu_833_p3;
wire   [25:0] tmp_29_fu_843_p4;
wire   [31:0] msb_idx_1_cast_fu_839_p1;
wire   [31:0] tmp32_V_fu_859_p1;
wire   [31:0] tmp_11_fu_862_p2;
wire   [3:0] tmp_35_fu_874_p1;
wire   [3:0] tmp_38_fu_878_p2;
wire   [11:0] tmp_45_fu_884_p1;
wire   [11:0] p_Result_s_fu_888_p2;
wire   [0:0] icmp_fu_853_p2;
wire   [31:0] tmp32_V_1_fu_868_p2;
wire   [31:0] tmp32_V_2_fu_893_p1;
wire   [31:0] grp_fu_409_p1;
wire   [7:0] p_Result_8_fu_909_p4;
wire   [6:0] tmp3_fu_925_p3;
wire   [7:0] tmp7280_cast_fu_932_p1;
wire   [7:0] p_Repl2_1_trunc_fu_936_p2;
wire   [8:0] tmp_18_fu_941_p3;
wire   [31:0] p_Result_5_fu_948_p5;
wire   [31:0] f_fu_959_p1;
wire   [63:0] d_assign_fu_412_p1;
wire   [63:0] ireg_V_fu_970_p1;
wire   [62:0] tmp_60_fu_974_p1;
wire   [52:0] tmp_22_fu_1009_p3;
wire   [8:0] tmp_64_fu_1032_p4;
wire   [11:0] tmp_25_fu_1048_p2;
wire   [11:0] tmp_26_fu_1054_p2;
wire   [53:0] p_Val2_22_fu_1079_p3;
wire   [53:0] tmp_32_fu_1106_p1;
wire   [53:0] tmp_33_fu_1110_p2;
wire   [0:0] tmp_28_fu_1096_p2;
wire   [11:0] tmp_66_fu_1116_p1;
wire   [11:0] storemerge_fu_1120_p3;
wire   [11:0] tmp_39_fu_1135_p2;
wire  signed [31:0] tmp_53_cast_fu_1140_p1;
wire   [0:0] tmp_68_fu_1144_p3;
wire   [11:0] p_Val2_12_fu_1127_p3;
wire   [0:0] qb_fu_1152_p3;
wire   [11:0] tmp_40_fu_1166_p1;
wire   [0:0] sel_tmp7_fu_1184_p2;
wire   [0:0] tmp_30_fu_1101_p2;
wire   [11:0] tmp74_cast_cast_fu_1195_p3;
wire   [11:0] exp_V_fu_1074_p2;
wire   [11:0] tmp_41_fu_1202_p2;
wire  signed [11:0] pos2_fu_1223_p2;
wire   [0:0] tmp_72_fu_1238_p3;
wire  signed [31:0] pos1_cast_fu_1219_p1;
wire   [53:0] tmp_44_fu_1252_p1;
wire   [53:0] tmp_46_fu_1256_p2;
wire   [0:0] lD_fu_1262_p1;
wire   [0:0] tmp5_fu_1266_p2;
wire  signed [31:0] pos2_cast_fu_1228_p1;
wire   [0:0] tmp_49_not_fu_1314_p2;
wire   [0:0] tmp_50_fu_1302_p2;
wire   [0:0] sel_tmp10_fu_1320_p2;
wire  signed [31:0] tmp_34_fu_1332_p1;
wire   [31:0] tmp_36_fu_1335_p2;
wire   [0:0] sel_tmp2_fu_1350_p2;
wire   [0:0] sel_tmp3_fu_1355_p2;
wire   [0:0] sel_tmp4_fu_1360_p2;
wire   [0:0] sel_tmp5_fu_1365_p2;
wire   [11:0] sel_tmp_fu_1344_p3;
wire   [0:0] sel_tmp9_fu_1378_p2;
wire   [11:0] sel_tmp6_fu_1371_p3;
wire   [11:0] tmp_67_fu_1340_p1;
wire   [11:0] sel_tmp1_fu_1383_p3;
wire   [0:0] tmp73_demorgan_fu_1397_p2;
wire   [0:0] tmp4_fu_1401_p2;
wire   [0:0] rev1_fu_1421_p2;
wire   [53:0] r_V_fu_1431_p2;
wire   [0:0] or_cond115_i_i_fu_1426_p2;
wire   [0:0] Range2_all_ones_fu_1436_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_1441_p3;
wire   [0:0] tmp_49_fu_1458_p2;
wire   [0:0] Range1_all_zeros_fu_1463_p2;
wire   [0:0] or_cond117_i_i_fu_1449_p2;
wire   [0:0] Range1_all_ones_fu_1453_p2;
wire   [0:0] sel_tmp12_fu_1478_p3;
wire   [0:0] p_119_i_i_fu_1474_p2;
wire   [0:0] p_122_i_i_fu_1468_p2;
wire   [0:0] sel_tmp13_fu_1491_p3;
wire   [0:0] carry_1_i_i_fu_1407_p2;
wire   [0:0] Range1_all_ones_2_i_s_fu_1483_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_1498_p3;
wire   [0:0] sel_tmp24_not_fu_1514_p2;
wire   [0:0] tmp6_fu_1520_p2;
wire   [0:0] carry_1_not_i_i_fu_1525_p2;
wire   [0:0] Range2_all_ones_1_no_fu_1530_p2;
wire   [0:0] tmp_75_fu_1548_p3;
wire   [0:0] brmerge123_i_i_fu_1536_p2;
wire   [0:0] Range1_all_ones_2_mu_fu_1542_p2;
wire   [0:0] p_120_i_i_fu_1555_p2;
wire   [0:0] Range1_all_ones_2_i_fu_1569_p2;
wire   [0:0] deleted_ones_fu_1561_p3;
wire   [0:0] sel_tmp14_fu_1581_p2;
wire   [0:0] newsignbit_1_fu_1413_p3;
wire   [0:0] tmp7_fu_1592_p2;
wire   [0:0] sel_tmp16_fu_1603_p2;
wire   [0:0] tmp_51_fu_1575_p2;
wire   [0:0] sel_tmp15_fu_1598_p2;
wire   [0:0] deleted_zeros_1_fu_1506_p3;
wire   [0:0] deleted_zeros_1_not_fu_1615_p2;
wire   [0:0] deleted_zeros_0_not_s_fu_1621_p2;
wire   [0:0] brmerge_i_i2_fu_1626_p2;
wire   [0:0] tmp_52_fu_1632_p2;
wire   [0:0] deleted_ones_0_i_i_fu_1586_p2;
wire   [0:0] brmerge121_i_i_fu_1649_p2;
wire   [0:0] underflow_1_fu_1654_p2;
wire   [0:0] neg_src_0_i_i_not_fu_1664_p2;
wire   [0:0] tmp8_fu_1669_p2;
wire   [0:0] brmerge_i_i_i1_fu_1659_p2;
wire   [0:0] tmp_54_fu_1693_p2;
wire   [11:0] p_Val2_1_33_fu_1686_p3;
wire   [0:0] sel_tmp58_demorgan_fu_1705_p2;
wire   [11:0] sel_tmp17_fu_1698_p3;
wire   [0:0] brmerge4_fu_1674_p2;
wire   [0:0] sel_tmp19_fu_1716_p2;
wire   [0:0] tmp9_fu_1721_p2;
wire   [0:0] sel_tmp20_fu_1727_p2;
wire   [11:0] p_Val2_21_mux_fu_1679_p3;
wire   [11:0] sel_tmp18_fu_1709_p3;
wire  signed [12:0] tmp_55_fu_1741_p1;
wire  signed [12:0] tmp_56_fu_1745_p1;
wire   [12:0] p_Val2_18_fu_1749_p2;
wire   [11:0] p_Val2_19_fu_1763_p2;
wire   [0:0] newsignbit_2_fu_1769_p3;
wire   [0:0] isneg_1_fu_1755_p3;
wire   [0:0] tmp_57_fu_1777_p2;
wire   [0:0] p_Result_27_not_fu_1795_p2;
wire   [0:0] brmerge_i_i3_fu_1789_p2;
wire   [0:0] underflow_2_fu_1783_p2;
wire   [0:0] brmerge5_fu_1801_p2;
wire   [11:0] p_Val2_25_mux_fu_1807_p3;
wire   [11:0] p_Val2_2_34_fu_1815_p3;
wire   [18:0] grp_fu_1856_p0;
wire  signed [11:0] grp_fu_1856_p1;
wire   [18:0] grp_fu_1856_p2;
wire   [7:0] tmp_83_fu_1869_p1;
wire   [10:0] tmp_58_fu_1889_p4;
wire   [0:0] newsignbit_3_fu_1881_p3;
wire   [0:0] p_not_i_fu_1899_p2;
wire   [0:0] isneg_2_fu_1861_p3;
wire   [0:0] brmerge_i1_fu_1905_p2;
wire   [0:0] tmp_23_fu_1911_p2;
wire   [0:0] p_not38_i_fu_1929_p2;
wire   [0:0] newsignbit_0_not_i_fu_1923_p2;
wire   [0:0] brmerge39_i_fu_1935_p2;
wire   [0:0] underflow_3_fu_1941_p2;
wire   [0:0] overflow_2_fu_1917_p2;
wire   [0:0] underflow_6_not_fu_1953_p2;
wire   [0:0] brmerge_i_i_fu_1947_p2;
wire   [8:0] p_Val2_9_fu_1873_p3;
wire   [0:0] brmerge6_fu_1959_p2;
wire   [8:0] p_Val2_11_mux_fu_1965_p3;
wire   [8:0] p_Val2_s_36_fu_1973_p3;
wire  signed [11:0] p_Val2_4_fu_1989_p1;
reg    grp_fu_1856_ap_start;
wire    grp_fu_1856_ap_done;
reg   [62:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
#0 grp_convolve_fu_387_ap_start_reg = 1'b0;
#0 grp_densifyto64_fu_399_ap_start_reg = 1'b0;
end

dev_digits_classiibs #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
biases_dense10_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(biases_dense10_V_address0),
    .ce0(biases_dense10_V_ce0),
    .q0(biases_dense10_V_q0)
);

dev_digits_classijbC #(
    .DataWidth( 9 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
weights_dense10_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weights_dense10_V_address0),
    .ce0(weights_dense10_V_ce0),
    .q0(weights_dense10_V_q0)
);

dev_digits_classify_a_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_A_DATA_WIDTH ))
dev_digits_classify_a_s_axi_U(
    .AWVALID(s_axi_a_AWVALID),
    .AWREADY(s_axi_a_AWREADY),
    .AWADDR(s_axi_a_AWADDR),
    .WVALID(s_axi_a_WVALID),
    .WREADY(s_axi_a_WREADY),
    .WDATA(s_axi_a_WDATA),
    .WSTRB(s_axi_a_WSTRB),
    .ARVALID(s_axi_a_ARVALID),
    .ARREADY(s_axi_a_ARREADY),
    .ARADDR(s_axi_a_ARADDR),
    .RVALID(s_axi_a_RVALID),
    .RREADY(s_axi_a_RREADY),
    .RDATA(s_axi_a_RDATA),
    .RRESP(s_axi_a_RRESP),
    .BVALID(s_axi_a_BVALID),
    .BREADY(s_axi_a_BREADY),
    .BRESP(s_axi_a_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_V_address0(grp_convolve_fu_387_in_V_address0),
    .input_V_ce0(grp_convolve_fu_387_in_V_ce0),
    .input_V_q0(input_V_q0),
    .softmax_out_V_address0(softmax_out_V_address0),
    .softmax_out_V_ce0(softmax_out_V_ce0),
    .softmax_out_V_we0(softmax_out_V_we0),
    .softmax_out_V_d0(this_assign_7_1_reg_2406)
);

dev_digits_classikbM #(
    .DataWidth( 12 ),
    .AddressRange( 343 ),
    .AddressWidth( 9 ))
max_pooled_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pooled_out_V_address0),
    .ce0(max_pooled_out_V_ce0),
    .we0(max_pooled_out_V_we0),
    .d0(grp_convolve_fu_387_outpool_V_d0),
    .q0(max_pooled_out_V_q0)
);

dev_digits_classilbW #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
condensed_64_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(condensed_64_out_address0),
    .ce0(condensed_64_out_ce0),
    .we0(condensed_64_out_we0),
    .d0(grp_densifyto64_fu_399_out_V_d0),
    .q0(condensed_64_out_q0)
);

dev_digits_classimb6 #(
    .DataWidth( 12 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
condensed_10_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(condensed_10_out_V_address0),
    .ce0(condensed_10_out_V_ce0),
    .we0(condensed_10_out_V_we0),
    .d0(condensed_10_out_V_d0),
    .q0(condensed_10_out_V_q0)
);

convolve grp_convolve_fu_387(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_convolve_fu_387_ap_start),
    .ap_done(grp_convolve_fu_387_ap_done),
    .ap_idle(grp_convolve_fu_387_ap_idle),
    .ap_ready(grp_convolve_fu_387_ap_ready),
    .in_V_address0(grp_convolve_fu_387_in_V_address0),
    .in_V_ce0(grp_convolve_fu_387_in_V_ce0),
    .in_V_q0(input_V_q0),
    .outpool_V_address0(grp_convolve_fu_387_outpool_V_address0),
    .outpool_V_ce0(grp_convolve_fu_387_outpool_V_ce0),
    .outpool_V_we0(grp_convolve_fu_387_outpool_V_we0),
    .outpool_V_d0(grp_convolve_fu_387_outpool_V_d0),
    .outpool_V_q0(max_pooled_out_V_q0)
);

densifyto64 grp_densifyto64_fu_399(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_densifyto64_fu_399_ap_start),
    .ap_done(grp_densifyto64_fu_399_ap_done),
    .ap_idle(grp_densifyto64_fu_399_ap_idle),
    .ap_ready(grp_densifyto64_fu_399_ap_ready),
    .in_V_address0(grp_densifyto64_fu_399_in_V_address0),
    .in_V_ce0(grp_densifyto64_fu_399_in_V_ce0),
    .in_V_q0(max_pooled_out_V_q0),
    .out_V_address0(grp_densifyto64_fu_399_out_V_address0),
    .out_V_ce0(grp_densifyto64_fu_399_out_V_ce0),
    .out_V_we0(grp_densifyto64_fu_399_out_V_we0),
    .out_V_d0(grp_densifyto64_fu_399_out_V_d0),
    .out_V_q0(condensed_64_out_q0)
);

dev_digits_classincg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dev_digits_classincg_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp32_V_3_reg_2151),
    .ce(1'b1),
    .dout(grp_fu_409_p1)
);

dev_digits_classiocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dev_digits_classiocq_U17(
    .din0(v_assign_reg_2171),
    .dout(d_assign_fu_412_p1)
);

dev_digits_classipcA #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dev_digits_classipcA_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd0),
    .din1(p_x_assign_reg_2166),
    .ce(1'b1),
    .dout(grp_fu_415_p2)
);

dev_digits_classiqcK #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 19 ))
dev_digits_classiqcK_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1856_ap_start),
    .done(grp_fu_1856_ap_done),
    .din0(grp_fu_1856_p0),
    .din1(grp_fu_1856_p1),
    .ce(1'b1),
    .dout(grp_fu_1856_p2)
);

dev_digits_classihbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
dev_digits_classihbi_U20(
    .din0(weights_dense10_V_lo_reg_2054),
    .din1(p_Val2_4_fu_1989_p1),
    .dout(p_Val2_4_fu_1989_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_convolve_fu_387_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_convolve_fu_387_ap_start_reg <= 1'b1;
        end else if ((grp_convolve_fu_387_ap_ready == 1'b1)) begin
            grp_convolve_fu_387_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_densifyto64_fu_399_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_densifyto64_fu_399_ap_start_reg <= 1'b1;
        end else if ((grp_densifyto64_fu_399_ap_ready == 1'b1)) begin
            grp_densifyto64_fu_399_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_470_p2 == 1'd1))) begin
        i4_reg_365 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        i4_reg_365 <= i_3_reg_2097;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i5_reg_376 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        i5_reg_376 <= i_2_reg_2386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond1_fu_420_p2 == 1'd1))) begin
        i_reg_329 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (exitcond4_fu_521_p2 == 1'd1))) begin
        i_reg_329 <= i_1_reg_2016;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j3_reg_341 <= j_2_reg_2044;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        j3_reg_341 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_318 <= j_1_reg_1998;
    end else if (((grp_densifyto64_fu_399_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_318 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_470_p2 == 1'd1))) begin
        p_Val2_17_reg_353 <= 12'd128;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        p_Val2_17_reg_353 <= sum_V_fu_1823_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        F2_reg_2219 <= F2_fu_1026_p2;
        QUAN_INC_reg_2228 <= QUAN_INC_fu_1042_p2;
        p_Result_6_reg_2209[51 : 0] <= p_Result_6_fu_1016_p1[51 : 0];
        sh_amt_reg_2234 <= sh_amt_fu_1060_p3;
        tmp_20_reg_2204[10 : 0] <= tmp_20_fu_1006_p1[10 : 0];
        tmp_37_reg_2241 <= tmp_37_fu_1068_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        OP1_V_reg_2036 <= OP1_V_fu_513_p1;
        p_shl3_cast_reg_2031[6 : 1] <= p_shl3_cast_fu_509_p1[6 : 1];
        p_shl_cast_reg_2026[8 : 3] <= p_shl_cast_fu_499_p1[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        Range1_all_ones_1_reg_2313 <= Range1_all_ones_1_fu_1272_p2;
        Range1_all_zeros_1_reg_2342 <= Range1_all_zeros_1_fu_1308_p2;
        Range2_V_1_reg_2336 <= Range2_V_1_fu_1296_p2;
        p_Val2_14_reg_2269 <= p_Val2_14_fu_1170_p2;
        pos1_reg_2294 <= pos1_fu_1214_p2;
        rev_reg_2306 <= rev_fu_1246_p2;
        sel_tmp11_reg_2347 <= sel_tmp11_fu_1326_p2;
        sel_tmp8_reg_2281 <= sel_tmp8_fu_1189_p2;
        sh_amt_cast_reg_2246 <= sh_amt_cast_fu_1084_p1;
        tmp_27_reg_2251 <= tmp_27_fu_1087_p2;
        tmp_42_reg_2288 <= tmp_42_fu_1208_p2;
        tmp_43_reg_2299 <= tmp_43_fu_1232_p2;
        tmp_47_reg_2325 <= tmp_47_fu_1286_p2;
        tmp_48_reg_2331[31 : 0] <= tmp_48_fu_1292_p1[31 : 0];
        tmp_65_reg_2257 <= tmp_65_fu_1092_p1;
        tmp_69_reg_2263 <= p_Val2_12_fu_1127_p3[32'd11];
        tmp_70_reg_2275 <= p_Val2_14_fu_1170_p2[32'd11];
        tmp_74_reg_2320 <= pos2_fu_1223_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        brmerge121_demorgan_s_reg_2372 <= brmerge121_demorgan_s_fu_1643_p2;
        neg_src_0_i_i_reg_2360 <= neg_src_0_i_i_fu_1607_p3;
        overflow_1_reg_2366 <= overflow_1_fu_1637_p2;
        p_Val2_15_reg_2353 <= p_Val2_15_fu_1390_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        condensed_10_out_V_a_1_reg_2064 <= tmp_7_fu_552_p1;
        p_Val2_4_reg_2059 <= p_Val2_4_fu_1989_p2;
        tmp_79_reg_2069 <= p_Val2_4_fu_1989_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond3_fu_740_p2 == 1'd0))) begin
        condensed_10_out_V_a_2_reg_2102 <= tmp_s_fu_752_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        exp_tmp_V_reg_2186 <= {{ireg_V_fu_970_p1[62:52]}};
        isneg_reg_2176 <= ireg_V_fu_970_p1[32'd63];
        tmp_24_reg_2196 <= tmp_24_fu_1000_p2;
        tmp_63_reg_2191 <= tmp_63_fu_996_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_2016 <= i_1_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_2_reg_2386 <= i_2_fu_1837_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_3_reg_2097 <= i_3_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        is_neg_reg_2119 <= condensed_10_out_V_q0[32'd11];
        p_Val2_2_reg_2112 <= condensed_10_out_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_1_reg_1998 <= j_1_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_2044 <= j_2_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((isneg_reg_2176 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        man_V_1_reg_2214 <= man_V_1_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Val2_6_reg_2083 <= {{p_Val2_5_fu_579_p2[19:8]}};
        signbit_reg_2074 <= p_Val2_5_fu_579_p2[32'd20];
        tmp_80_reg_2088 <= p_Val2_5_fu_579_p2[32'd19];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_7_reg_2130 <= p_Val2_7_fu_779_p3;
        tmp_15_reg_2136 <= tmp_15_fu_817_p1;
        tmp_19_reg_2141 <= msb_idx_fu_811_p2[32'd31];
        tmp_3_reg_2125 <= tmp_3_fu_769_p2;
        tmp_53_reg_2146 <= tmp_53_fu_829_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_x_assign_reg_2166 <= p_x_assign_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        this_assign_7_1_reg_2406 <= this_assign_7_1_fu_1981_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_3_reg_2125 == 1'd0))) begin
        tmp32_V_3_reg_2151 <= tmp32_V_3_fu_897_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (tmp_3_reg_2125 == 1'd0))) begin
        tmp32_V_6_reg_2156 <= tmp32_V_6_fu_905_p1;
        tmp_13_reg_2161 <= tmp_13_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        tmp_26_tr_cast_reg_2107 <= tmp_26_tr_cast_fu_757_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (exitcond_fu_1831_p2 == 1'd0))) begin
        tmp_4_reg_2391[3 : 0] <= tmp_4_fu_1843_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond1_fu_420_p2 == 1'd0))) begin
        tmp_reg_2003[3 : 0] <= tmp_fu_432_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        v_assign_reg_2171 <= grp_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_dense10_V_lo_reg_2054 <= weights_dense10_V_q0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        biases_dense10_V_ce0 = 1'b1;
    end else begin
        biases_dense10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        condensed_10_out_V_address0 = tmp_4_fu_1843_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        condensed_10_out_V_address0 = condensed_10_out_V_a_2_reg_2102;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        condensed_10_out_V_address0 = tmp_s_fu_752_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        condensed_10_out_V_address0 = condensed_10_out_V_a_1_reg_2064;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        condensed_10_out_V_address0 = tmp_7_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        condensed_10_out_V_address0 = tmp_reg_2003;
    end else begin
        condensed_10_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        condensed_10_out_V_ce0 = 1'b1;
    end else begin
        condensed_10_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        condensed_10_out_V_d0 = p_Val2_16_fu_1732_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        condensed_10_out_V_d0 = this_assign_5_1_fu_731_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        condensed_10_out_V_d0 = p_Val2_2_cast_fu_465_p1;
    end else begin
        condensed_10_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state38))) begin
        condensed_10_out_V_we0 = 1'b1;
    end else begin
        condensed_10_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        condensed_64_out_address0 = tmp_8_fu_482_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        condensed_64_out_address0 = grp_densifyto64_fu_399_out_V_address0;
    end else begin
        condensed_64_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        condensed_64_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        condensed_64_out_ce0 = grp_densifyto64_fu_399_out_V_ce0;
    end else begin
        condensed_64_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        condensed_64_out_we0 = grp_densifyto64_fu_399_out_V_we0;
    end else begin
        condensed_64_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_1856_ap_start = 1'b1;
    end else begin
        grp_fu_1856_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pooled_out_V_address0 = grp_densifyto64_fu_399_in_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pooled_out_V_address0 = grp_convolve_fu_387_outpool_V_address0;
    end else begin
        max_pooled_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pooled_out_V_ce0 = grp_densifyto64_fu_399_in_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pooled_out_V_ce0 = grp_convolve_fu_387_outpool_V_ce0;
    end else begin
        max_pooled_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pooled_out_V_we0 = grp_convolve_fu_387_outpool_V_we0;
    end else begin
        max_pooled_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_out_V_ce0 = 1'b1;
    end else begin
        softmax_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_out_V_we0 = 1'b1;
    end else begin
        softmax_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_dense10_V_ce0 = 1'b1;
    end else begin
        weights_dense10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_convolve_fu_387_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_densifyto64_fu_399_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond1_fu_420_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_470_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond4_fu_521_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state14 : begin
            if (((exitcond3_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state39 : begin
            if (((exitcond_fu_1831_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1026_p2 = (12'd1075 - tmp_20_fu_1006_p1);

assign OP1_V_fu_513_p1 = $signed(condensed_64_out_q0);

assign QUAN_INC_fu_1042_p2 = (($signed(tmp_64_fu_1032_p4) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign Range1_all_ones_1_fu_1272_p2 = (tmp_43_fu_1232_p2 & tmp5_fu_1266_p2);

assign Range1_all_ones_2_i_fu_1569_p2 = (carry_1_i_i_fu_1407_p2 & Range1_all_ones_2_i_s_fu_1483_p3);

assign Range1_all_ones_2_i_s_fu_1483_p3 = ((or_cond117_i_i_fu_1449_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1453_p2 : sel_tmp12_fu_1478_p3);

assign Range1_all_ones_2_mu_fu_1542_p2 = (carry_1_not_i_i_fu_1525_p2 & Range1_all_ones_2_i_s_fu_1483_p3);

assign Range1_all_ones_fu_1453_p2 = (Range2_all_ones_1_i_s_fu_1441_p3 & Range1_all_ones_1_reg_2313);

assign Range1_all_zeros_1_fu_1308_p2 = ((p_Val2_22_fu_1079_p3 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_1498_p3 = ((or_cond117_i_i_fu_1449_p2[0:0] === 1'b1) ? p_122_i_i_fu_1468_p2 : sel_tmp13_fu_1491_p3);

assign Range1_all_zeros_fu_1463_p2 = (1'd1 ^ Range1_all_ones_1_reg_2313);

assign Range2_V_1_fu_1296_p2 = p_Val2_22_fu_1079_p3 >> tmp_48_fu_1292_p1;

assign Range2_all_ones_1_i_s_fu_1441_p3 = ((or_cond115_i_i_fu_1426_p2[0:0] === 1'b1) ? Range2_all_ones_fu_1436_p2 : rev1_fu_1421_p2);

assign Range2_all_ones_1_no_fu_1530_p2 = (1'd1 ^ Range2_all_ones_1_i_s_fu_1441_p3);

assign Range2_all_ones_fu_1436_p2 = ((Range2_V_1_reg_2336 == r_V_fu_1431_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign biases_dense10_V_address0 = tmp_fu_432_p1;

assign brmerge121_demorgan_s_fu_1643_p2 = (newsignbit_1_fu_1413_p3 & deleted_ones_0_i_i_fu_1586_p2);

assign brmerge121_i_i_fu_1649_p2 = (brmerge121_demorgan_s_reg_2372 ^ 1'd1);

assign brmerge123_i_i_fu_1536_p2 = (carry_1_not_i_i_fu_1525_p2 | Range2_all_ones_1_no_fu_1530_p2);

assign brmerge39_i_fu_1935_p2 = (p_not38_i_fu_1929_p2 | newsignbit_0_not_i_fu_1923_p2);

assign brmerge40_demorgan_i_fu_681_p2 = (signbit_reg_2074 & newsignbit_fu_618_p3);

assign brmerge4_fu_1674_p2 = (tmp8_fu_1669_p2 | brmerge121_demorgan_s_reg_2372);

assign brmerge5_fu_1801_p2 = (p_Result_27_not_fu_1795_p2 | newsignbit_2_fu_1769_p3);

assign brmerge6_fu_1959_p2 = (underflow_6_not_fu_1953_p2 | overflow_2_fu_1917_p2);

assign brmerge_i1_fu_1905_p2 = (p_not_i_fu_1899_p2 | newsignbit_3_fu_1881_p3);

assign brmerge_i_i1_fu_669_p2 = (p_not_i_i_fu_663_p2 | newsignbit_fu_618_p3);

assign brmerge_i_i2_fu_1626_p2 = (newsignbit_1_fu_1413_p3 | deleted_zeros_0_not_s_fu_1621_p2);

assign brmerge_i_i3_fu_1789_p2 = (newsignbit_2_fu_1769_p3 ^ isneg_1_fu_1755_p3);

assign brmerge_i_i_fu_1947_p2 = (underflow_3_fu_1941_p2 | overflow_2_fu_1917_p2);

assign brmerge_i_i_i1_fu_1659_p2 = (underflow_1_fu_1654_p2 | overflow_1_reg_2366);

assign brmerge_i_i_i_fu_697_p2 = (underflow_fu_692_p2 | overflow_fu_675_p2);

assign carry_1_i_i_fu_1407_p2 = (tmp4_fu_1401_p2 & sel_tmp9_fu_1378_p2);

assign carry_1_not_i_i_fu_1525_p2 = (tmp_70_reg_2275 | tmp6_fu_1520_p2);

assign carry_fu_632_p2 = (tmp_80_reg_2088 & tmp_21_fu_626_p2);

assign deleted_ones_0_i_i_fu_1586_p2 = (sel_tmp14_fu_1581_p2 | deleted_ones_fu_1561_p3);

assign deleted_ones_fu_1561_p3 = ((brmerge123_i_i_fu_1536_p2[0:0] === 1'b1) ? Range1_all_ones_2_mu_fu_1542_p2 : p_120_i_i_fu_1555_p2);

assign deleted_zeros_0_not_s_fu_1621_p2 = (tmp_43_reg_2299 & deleted_zeros_1_not_fu_1615_p2);

assign deleted_zeros_1_fu_1506_p3 = ((carry_1_i_i_fu_1407_p2[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_1483_p3 : Range1_all_zeros_2_i_fu_1498_p3);

assign deleted_zeros_1_not_fu_1615_p2 = (deleted_zeros_1_fu_1506_p3 ^ 1'd1);

assign deleted_zeros_fu_648_p2 = (signbit_reg_2074 ^ not_carry_fu_642_p2);

assign exitcond1_fu_420_p2 = ((j_reg_318 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond2_fu_470_p2 = ((i_reg_329 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond3_fu_740_p2 = ((i4_reg_365 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond4_fu_521_p2 = ((j3_reg_341 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_1831_p2 = ((i5_reg_376 == 4'd10) ? 1'b1 : 1'b0);

assign exp_V_fu_1074_p2 = ($signed(12'd3073) + $signed(tmp_20_reg_2204));

assign f_fu_959_p1 = p_Result_5_fu_948_p5;

assign grp_convolve_fu_387_ap_start = grp_convolve_fu_387_ap_start_reg;

assign grp_densifyto64_fu_399_ap_start = grp_densifyto64_fu_399_ap_start_reg;

assign grp_fu_1856_p0 = {{condensed_10_out_V_q0}, {7'd0}};

assign grp_fu_1856_p1 = tmp_26_tr_cast_reg_2107;

assign i_1_fu_476_p2 = (i_reg_329 + 7'd1);

assign i_2_fu_1837_p2 = (i5_reg_376 + 4'd1);

assign i_3_fu_746_p2 = (i4_reg_365 + 4'd1);

assign icmp_fu_853_p2 = ((tmp_29_fu_843_p4 == 26'd0) ? 1'b1 : 1'b0);

assign index_fu_542_p2 = (p_shl_cast_reg_2026 + tmp69_cast_fu_538_p1);

assign ireg_V_fu_970_p1 = d_assign_fu_412_p1;

assign isneg_1_fu_1755_p3 = p_Val2_18_fu_1749_p2[32'd12];

assign isneg_2_fu_1861_p3 = grp_fu_1856_p2[32'd18];

assign j3_cast_fu_517_p1 = j3_reg_341;

assign j_1_fu_426_p2 = (j_reg_318 + 4'd1);

assign j_2_fu_527_p2 = (j3_reg_341 + 4'd1);

assign lD_fu_1262_p1 = tmp_46_fu_1256_p2[0:0];

assign man_V_1_fu_1020_p2 = (54'd0 - p_Result_6_fu_1016_p1);

assign msb_idx_1_cast_fu_839_p1 = msb_idx_1_fu_833_p3;

assign msb_idx_1_fu_833_p3 = ((tmp_19_reg_2141[0:0] === 1'b1) ? 31'd0 : tmp_15_reg_2136);

assign msb_idx_fu_811_p2 = (32'd11 - num_zeros_fu_803_p3);

assign neg_src_0_i_i_fu_1607_p3 = ((sel_tmp16_fu_1603_p2[0:0] === 1'b1) ? tmp_51_fu_1575_p2 : sel_tmp15_fu_1598_p2);

assign neg_src_0_i_i_not_fu_1664_p2 = (neg_src_0_i_i_reg_2360 ^ 1'd1);

assign newsignbit_0_not_i_fu_1923_p2 = (newsignbit_3_fu_1881_p3 ^ 1'd1);

assign newsignbit_1_fu_1413_p3 = p_Val2_15_fu_1390_p3[32'd11];

assign newsignbit_2_fu_1769_p3 = p_Val2_19_fu_1763_p2[32'd11];

assign newsignbit_3_fu_1881_p3 = grp_fu_1856_p2[32'd7];

assign newsignbit_fu_618_p3 = p_Val2_8_fu_613_p2[32'd11];

assign not_carry_fu_642_p2 = (p_Result_4_not_fu_637_p2 | newsignbit_fu_618_p3);


always @ (p_Result_4_fu_795_p3) begin
    if (p_Result_4_fu_795_p3[0] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd0;
    end else if (p_Result_4_fu_795_p3[1] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd1;
    end else if (p_Result_4_fu_795_p3[2] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd2;
    end else if (p_Result_4_fu_795_p3[3] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd3;
    end else if (p_Result_4_fu_795_p3[4] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd4;
    end else if (p_Result_4_fu_795_p3[5] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd5;
    end else if (p_Result_4_fu_795_p3[6] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd6;
    end else if (p_Result_4_fu_795_p3[7] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd7;
    end else if (p_Result_4_fu_795_p3[8] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd8;
    end else if (p_Result_4_fu_795_p3[9] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd9;
    end else if (p_Result_4_fu_795_p3[10] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd10;
    end else if (p_Result_4_fu_795_p3[11] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd11;
    end else if (p_Result_4_fu_795_p3[12] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd12;
    end else if (p_Result_4_fu_795_p3[13] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd13;
    end else if (p_Result_4_fu_795_p3[14] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd14;
    end else if (p_Result_4_fu_795_p3[15] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd15;
    end else if (p_Result_4_fu_795_p3[16] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd16;
    end else if (p_Result_4_fu_795_p3[17] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd17;
    end else if (p_Result_4_fu_795_p3[18] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd18;
    end else if (p_Result_4_fu_795_p3[19] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd19;
    end else if (p_Result_4_fu_795_p3[20] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd20;
    end else if (p_Result_4_fu_795_p3[21] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd21;
    end else if (p_Result_4_fu_795_p3[22] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd22;
    end else if (p_Result_4_fu_795_p3[23] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd23;
    end else if (p_Result_4_fu_795_p3[24] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd24;
    end else if (p_Result_4_fu_795_p3[25] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd25;
    end else if (p_Result_4_fu_795_p3[26] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd26;
    end else if (p_Result_4_fu_795_p3[27] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd27;
    end else if (p_Result_4_fu_795_p3[28] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd28;
    end else if (p_Result_4_fu_795_p3[29] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd29;
    end else if (p_Result_4_fu_795_p3[30] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd30;
    end else if (p_Result_4_fu_795_p3[31] == 1'b1) begin
        num_zeros_fu_803_p3 = 32'd31;
    end else begin
        num_zeros_fu_803_p3 = 32'd32;
    end
end

assign or_cond115_i_i_fu_1426_p2 = (tmp_47_reg_2325 & rev1_fu_1421_p2);

assign or_cond117_i_i_fu_1449_p2 = (tmp_47_reg_2325 & rev_reg_2306);

assign overflow_1_fu_1637_p2 = (tmp_52_fu_1632_p2 & brmerge_i_i2_fu_1626_p2);

assign overflow_2_fu_1917_p2 = (tmp_23_fu_1911_p2 & brmerge_i1_fu_1905_p2);

assign overflow_fu_675_p2 = (tmp_31_fu_653_p2 & brmerge_i_i1_fu_669_p2);

assign p_119_i_i_fu_1474_p2 = (rev_reg_2306 | Range1_all_zeros_1_reg_2342);

assign p_120_i_i_fu_1555_p2 = (tmp_75_fu_1548_p3 | Range1_all_zeros_fu_1463_p2);

assign p_122_i_i_fu_1468_p2 = (tmp_49_fu_1458_p2 & Range1_all_zeros_fu_1463_p2);

assign p_38_i_i_fu_658_p2 = (signbit_reg_2074 & carry_fu_632_p2);

assign p_Repl2_1_trunc_fu_936_p2 = (tmp7280_cast_fu_932_p1 + tmp_53_reg_2146);

assign p_Result_27_not_fu_1795_p2 = (isneg_1_fu_1755_p3 ^ 1'd1);

integer ap_tvar_int_0;

always @ (p_Val2_7_fu_779_p3) begin
    for (ap_tvar_int_0 = 12 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 11 - 0) begin
            p_Result_3_fu_785_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_3_fu_785_p4[ap_tvar_int_0] = p_Val2_7_fu_779_p3[11 - ap_tvar_int_0];
        end
    end
end

assign p_Result_4_fu_795_p3 = {{20'd1048575}, {p_Result_3_fu_785_p4}};

assign p_Result_4_not_fu_637_p2 = (tmp_80_reg_2088 ^ 1'd1);

assign p_Result_5_fu_948_p5 = {{tmp_18_fu_941_p3}, {tmp32_V_6_reg_2156[22:0]}};

assign p_Result_6_fu_1016_p1 = tmp_22_fu_1009_p3;

assign p_Result_8_fu_909_p4 = {{tmp32_V_6_fu_905_p1[30:23]}};

assign p_Result_s_fu_888_p2 = p_Val2_7_reg_2130 >> tmp_45_fu_884_p1;

assign p_Val2_11_mux_fu_1965_p3 = ((brmerge_i_i_fu_1947_p2[0:0] === 1'b1) ? 9'd255 : p_Val2_9_fu_1873_p3);

assign p_Val2_12_fu_1127_p3 = ((tmp_28_fu_1096_p2[0:0] === 1'b1) ? tmp_66_fu_1116_p1 : storemerge_fu_1120_p3);

assign p_Val2_14_fu_1170_p2 = (p_Val2_12_fu_1127_p3 + tmp_40_fu_1166_p1);

assign p_Val2_15_fu_1390_p3 = ((sel_tmp8_reg_2281[0:0] === 1'b1) ? tmp_67_fu_1340_p1 : sel_tmp1_fu_1383_p3);

assign p_Val2_16_fu_1732_p3 = ((sel_tmp20_fu_1727_p2[0:0] === 1'b1) ? p_Val2_21_mux_fu_1679_p3 : sel_tmp18_fu_1709_p3);

assign p_Val2_18_fu_1749_p2 = ($signed(tmp_55_fu_1741_p1) + $signed(tmp_56_fu_1745_p1));

assign p_Val2_19_fu_1763_p2 = ($signed(p_Val2_16_fu_1732_p3) + $signed(p_Val2_17_reg_353));

assign p_Val2_1_33_fu_1686_p3 = ((tmp_24_reg_2196[0:0] === 1'b1) ? 12'd0 : 12'd2048);

assign p_Val2_1_cast_cast_fu_447_p1 = $signed(tmp_1_fu_437_p4);

assign p_Val2_1_fu_459_p2 = ($signed(p_Val2_1_cast_cast_fu_447_p1) + $signed(tmp_6_cast_cast_fu_455_p1));

assign p_Val2_21_mux_fu_1679_p3 = ((brmerge_i_i_i1_fu_1659_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_15_reg_2353);

assign p_Val2_22_fu_1079_p3 = ((isneg_reg_2176[0:0] === 1'b1) ? man_V_1_reg_2214 : p_Result_6_reg_2209);

assign p_Val2_25_mux_fu_1807_p3 = ((brmerge_i_i3_fu_1789_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_19_fu_1763_p2);

assign p_Val2_2_34_fu_1815_p3 = ((underflow_2_fu_1783_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_19_fu_1763_p2);

assign p_Val2_2_cast_fu_465_p1 = $signed(p_Val2_1_fu_459_p2);

assign p_Val2_4_fu_1989_p1 = OP1_V_reg_2036;

assign p_Val2_5_fu_579_p2 = ($signed(p_Val2_4_reg_2059) + $signed(tmp_12_cast_fu_575_p1));

assign p_Val2_7_fu_779_p3 = ((is_neg_reg_2119[0:0] === 1'b1) ? tmp_6_fu_774_p2 : p_Val2_2_reg_2112);

assign p_Val2_8_31_fu_723_p3 = ((underflow_fu_692_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_8_fu_613_p2);

assign p_Val2_8_fu_613_p2 = (tmp_16_fu_610_p1 + p_Val2_6_reg_2083);

assign p_Val2_8_mux_fu_715_p3 = ((brmerge_i_i_i_fu_697_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_8_fu_613_p2);

assign p_Val2_9_fu_1873_p3 = {{tmp_83_fu_1869_p1}, {1'd0}};

assign p_Val2_s_36_fu_1973_p3 = ((underflow_3_fu_1941_p2[0:0] === 1'b1) ? 9'd256 : p_Val2_9_fu_1873_p3);

assign p_not38_i_fu_1929_p2 = ((tmp_58_fu_1889_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign p_not_i_fu_1899_p2 = ((tmp_58_fu_1889_p4 != 11'd0) ? 1'b1 : 1'b0);

assign p_not_i_i_fu_663_p2 = (deleted_zeros_fu_648_p2 ^ 1'd1);

assign p_shl3_cast_fu_509_p1 = tmp_9_fu_503_p2;

assign p_shl_cast_fu_499_p1 = p_shl_fu_491_p3;

assign p_shl_fu_491_p3 = {{tmp_5_fu_487_p1}, {3'd0}};

assign p_x_assign_fu_963_p3 = ((tmp_3_reg_2125[0:0] === 1'b1) ? 32'd0 : f_fu_959_p1);

assign pos1_cast_fu_1219_p1 = pos1_fu_1214_p2;

assign pos1_fu_1214_p2 = (12'd5 + F2_reg_2219);

assign pos2_cast_fu_1228_p1 = pos2_fu_1223_p2;

assign pos2_fu_1223_p2 = (12'd6 + F2_reg_2219);

assign qb_fu_1152_p3 = ((tmp_37_reg_2241[0:0] === 1'b1) ? isneg_reg_2176 : tmp_68_fu_1144_p3);

assign r_V_fu_1431_p2 = 54'd18014398509481983 >> tmp_48_reg_2331;

assign rev1_fu_1421_p2 = (tmp_74_reg_2320 ^ 1'd1);

assign rev_fu_1246_p2 = (tmp_72_fu_1238_p3 ^ 1'd1);

assign sel_tmp10_fu_1320_p2 = (tmp_72_fu_1238_p3 | tmp_49_not_fu_1314_p2);

assign sel_tmp11_fu_1326_p2 = (tmp_50_fu_1302_p2 & sel_tmp10_fu_1320_p2);

assign sel_tmp12_fu_1478_p3 = ((sel_tmp11_reg_2347[0:0] === 1'b1) ? Range1_all_ones_1_reg_2313 : rev_reg_2306);

assign sel_tmp13_fu_1491_p3 = ((sel_tmp11_reg_2347[0:0] === 1'b1) ? Range1_all_zeros_fu_1463_p2 : p_119_i_i_fu_1474_p2);

assign sel_tmp14_fu_1581_p2 = (tmp_43_reg_2299 ^ 1'd1);

assign sel_tmp15_fu_1598_p2 = (tmp7_fu_1592_p2 & isneg_reg_2176);

assign sel_tmp16_fu_1603_p2 = (tmp_43_reg_2299 & isneg_reg_2176);

assign sel_tmp17_fu_1698_p3 = ((tmp_54_fu_1693_p2[0:0] === 1'b1) ? p_Val2_1_33_fu_1686_p3 : p_Val2_15_reg_2353);

assign sel_tmp18_fu_1709_p3 = ((sel_tmp58_demorgan_fu_1705_p2[0:0] === 1'b1) ? sel_tmp17_fu_1698_p3 : p_Val2_15_reg_2353);

assign sel_tmp19_fu_1716_p2 = (tmp_24_reg_2196 ^ 1'd1);

assign sel_tmp1_fu_1383_p3 = ((sel_tmp9_fu_1378_p2[0:0] === 1'b1) ? p_Val2_14_reg_2269 : sel_tmp6_fu_1371_p3);

assign sel_tmp20_fu_1727_p2 = (tmp_42_reg_2288 & tmp9_fu_1721_p2);

assign sel_tmp24_not_fu_1514_p2 = (sel_tmp9_fu_1378_p2 ^ 1'd1);

assign sel_tmp2_fu_1350_p2 = (tmp_27_reg_2251 ^ 1'd1);

assign sel_tmp3_fu_1355_p2 = (sel_tmp2_fu_1350_p2 & QUAN_INC_reg_2228);

assign sel_tmp4_fu_1360_p2 = (tmp_69_reg_2263 ^ 1'd1);

assign sel_tmp58_demorgan_fu_1705_p2 = (tmp_42_reg_2288 | tmp_24_reg_2196);

assign sel_tmp5_fu_1365_p2 = (sel_tmp4_fu_1360_p2 & sel_tmp3_fu_1355_p2);

assign sel_tmp6_fu_1371_p3 = ((sel_tmp5_fu_1365_p2[0:0] === 1'b1) ? p_Val2_14_reg_2269 : sel_tmp_fu_1344_p3);

assign sel_tmp7_fu_1184_p2 = (($signed(F2_reg_2219) < $signed(12'd7)) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_1189_p2 = (tmp_30_fu_1101_p2 & sel_tmp7_fu_1184_p2);

assign sel_tmp9_fu_1378_p2 = (tmp_69_reg_2263 & sel_tmp3_fu_1355_p2);

assign sel_tmp_fu_1344_p3 = ((tmp_27_reg_2251[0:0] === 1'b1) ? tmp_65_reg_2257 : 12'd0);

assign sh_amt_cast_fu_1084_p1 = sh_amt_reg_2234;

assign sh_amt_fu_1060_p3 = ((QUAN_INC_fu_1042_p2[0:0] === 1'b1) ? tmp_25_fu_1048_p2 : tmp_26_fu_1054_p2);

assign softmax_out_V_address0 = tmp_4_reg_2391;

assign storemerge_fu_1120_p3 = ((isneg_reg_2176[0:0] === 1'b1) ? 12'd4095 : 12'd0);

assign sum_V_fu_1823_p3 = ((brmerge5_fu_1801_p2[0:0] === 1'b1) ? p_Val2_25_mux_fu_1807_p3 : p_Val2_2_34_fu_1815_p3);

assign this_assign_5_1_fu_731_p3 = ((underflow_not_fu_709_p2[0:0] === 1'b1) ? p_Val2_8_mux_fu_715_p3 : p_Val2_8_31_fu_723_p3);

assign this_assign_7_1_fu_1981_p3 = ((brmerge6_fu_1959_p2[0:0] === 1'b1) ? p_Val2_11_mux_fu_1965_p3 : p_Val2_s_36_fu_1973_p3);

assign tmp10_fu_533_p2 = (j3_cast_fu_517_p1 + p_shl3_cast_reg_2031);

assign tmp11_fu_703_p2 = (tmp_31_fu_653_p2 | newsignbit_fu_618_p3);

assign tmp32_V_1_fu_868_p2 = tmp32_V_fu_859_p1 << tmp_11_fu_862_p2;

assign tmp32_V_2_fu_893_p1 = p_Result_s_fu_888_p2;

assign tmp32_V_3_fu_897_p3 = ((icmp_fu_853_p2[0:0] === 1'b1) ? tmp32_V_1_fu_868_p2 : tmp32_V_2_fu_893_p1);

assign tmp32_V_6_fu_905_p1 = grp_fu_409_p1;

assign tmp32_V_fu_859_p1 = p_Val2_7_reg_2130;

assign tmp3_fu_925_p3 = {{6'd60}, {tmp_13_reg_2161}};

assign tmp4_fu_1401_p2 = (tmp73_demorgan_fu_1397_p2 ^ 1'd1);

assign tmp5_fu_1266_p2 = (rev_fu_1246_p2 & lD_fu_1262_p1);

assign tmp69_cast_fu_538_p1 = tmp10_fu_533_p2;

assign tmp6_fu_1520_p2 = (sel_tmp8_reg_2281 | sel_tmp24_not_fu_1514_p2);

assign tmp70_demorgan_fu_686_p2 = (p_38_i_i_fu_658_p2 | brmerge40_demorgan_i_fu_681_p2);

assign tmp7280_cast_fu_932_p1 = tmp3_fu_925_p3;

assign tmp73_demorgan_fu_1397_p2 = (tmp_70_reg_2275 | sel_tmp8_reg_2281);

assign tmp74_cast_cast_fu_1195_p3 = ((QUAN_INC_reg_2228[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp7_fu_1592_p2 = (sel_tmp14_fu_1581_p2 & newsignbit_1_fu_1413_p3);

assign tmp8_fu_1669_p2 = (overflow_1_reg_2366 | neg_src_0_i_i_not_fu_1664_p2);

assign tmp9_fu_1721_p2 = (sel_tmp19_fu_1716_p2 & brmerge4_fu_1674_p2);

assign tmp_10_fu_547_p1 = index_fu_542_p2;

assign tmp_11_fu_862_p2 = (32'd31 - msb_idx_1_cast_fu_839_p1);

assign tmp_12_cast_fu_575_p1 = $signed(tmp_12_fu_567_p3);

assign tmp_12_fu_567_p3 = {{condensed_10_out_V_q0}, {8'd0}};

assign tmp_13_fu_919_p2 = ((p_Result_8_fu_909_p4 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_15_fu_817_p1 = msb_idx_fu_811_p2[30:0];

assign tmp_16_fu_610_p1 = tmp_79_reg_2069;

assign tmp_18_fu_941_p3 = {{is_neg_reg_2119}, {p_Repl2_1_trunc_fu_936_p2}};

assign tmp_1_fu_437_p4 = {{biases_dense10_V_q0[6:1]}};

assign tmp_20_fu_1006_p1 = exp_tmp_V_reg_2186;

assign tmp_21_fu_626_p2 = (newsignbit_fu_618_p3 ^ 1'd1);

assign tmp_22_fu_1009_p3 = {{1'd1}, {tmp_63_reg_2191}};

assign tmp_23_fu_1911_p2 = (isneg_2_fu_1861_p3 ^ 1'd1);

assign tmp_24_fu_1000_p2 = ((tmp_60_fu_974_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_25_fu_1048_p2 = ($signed(12'd4089) + $signed(F2_fu_1026_p2));

assign tmp_26_fu_1054_p2 = (12'd7 - F2_fu_1026_p2);

assign tmp_26_tr_cast_fu_757_p1 = p_Val2_17_reg_353;

assign tmp_27_fu_1087_p2 = ((F2_reg_2219 == 12'd7) ? 1'b1 : 1'b0);

assign tmp_28_fu_1096_p2 = ((sh_amt_reg_2234 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_29_fu_843_p4 = {{msb_idx_1_fu_833_p3[30:5]}};

assign tmp_2_fu_451_p1 = biases_dense10_V_q0[0:0];

assign tmp_30_fu_1101_p2 = ((sh_amt_reg_2234 < 12'd12) ? 1'b1 : 1'b0);

assign tmp_31_fu_653_p2 = (signbit_reg_2074 ^ 1'd1);

assign tmp_32_fu_1106_p1 = $unsigned(sh_amt_cast_fu_1084_p1);

assign tmp_33_fu_1110_p2 = $signed(p_Val2_22_fu_1079_p3) >>> tmp_32_fu_1106_p1;

assign tmp_34_fu_1332_p1 = tmp_65_reg_2257;

assign tmp_35_fu_874_p1 = msb_idx_1_fu_833_p3[3:0];

assign tmp_36_fu_1335_p2 = tmp_34_fu_1332_p1 << sh_amt_cast_reg_2246;

assign tmp_37_fu_1068_p2 = (($signed(tmp_25_fu_1048_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_38_fu_878_p2 = (4'd1 + tmp_35_fu_874_p1);

assign tmp_39_fu_1135_p2 = ($signed(12'd4088) + $signed(F2_reg_2219));

assign tmp_3_fu_769_p2 = ((p_Val2_2_reg_2112 == 12'd0) ? 1'b1 : 1'b0);

assign tmp_40_fu_1166_p1 = qb_fu_1152_p3;

assign tmp_41_fu_1202_p2 = (tmp74_cast_cast_fu_1195_p3 + exp_V_fu_1074_p2);

assign tmp_42_fu_1208_p2 = (($signed(tmp_41_fu_1202_p2) > $signed(12'd4)) ? 1'b1 : 1'b0);

assign tmp_43_fu_1232_p2 = (($signed(pos1_fu_1214_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_44_fu_1252_p1 = $unsigned(pos1_cast_fu_1219_p1);

assign tmp_45_fu_884_p1 = tmp_38_fu_878_p2;

assign tmp_46_fu_1256_p2 = $signed(p_Val2_22_fu_1079_p3) >>> tmp_44_fu_1252_p1;

assign tmp_47_fu_1286_p2 = (($signed(pos2_fu_1223_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_48_fu_1292_p1 = $unsigned(pos2_cast_fu_1228_p1);

assign tmp_49_fu_1458_p2 = ((Range2_V_1_reg_2336 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_49_not_fu_1314_p2 = (tmp_47_fu_1286_p2 ^ 1'd1);

assign tmp_4_fu_1843_p1 = i5_reg_376;

assign tmp_50_fu_1302_p2 = ((pos2_fu_1223_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_51_fu_1575_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_1569_p2);

assign tmp_52_fu_1632_p2 = (isneg_reg_2176 ^ 1'd1);

assign tmp_53_cast_fu_1140_p1 = $signed(tmp_39_fu_1135_p2);

assign tmp_53_fu_829_p1 = msb_idx_fu_811_p2[7:0];

assign tmp_54_fu_1693_p2 = (underflow_1_fu_1654_p2 | tmp_24_reg_2196);

assign tmp_55_fu_1741_p1 = p_Val2_17_reg_353;

assign tmp_56_fu_1745_p1 = p_Val2_16_fu_1732_p3;

assign tmp_57_fu_1777_p2 = (newsignbit_2_fu_1769_p3 ^ 1'd1);

assign tmp_58_fu_1889_p4 = {{grp_fu_1856_p2[18:8]}};

assign tmp_5_fu_487_p1 = i_reg_329[5:0];

assign tmp_60_fu_974_p1 = ireg_V_fu_970_p1[62:0];

assign tmp_63_fu_996_p1 = ireg_V_fu_970_p1[51:0];

assign tmp_64_fu_1032_p4 = {{F2_fu_1026_p2[11:3]}};

assign tmp_65_fu_1092_p1 = p_Val2_22_fu_1079_p3[11:0];

assign tmp_66_fu_1116_p1 = tmp_33_fu_1110_p2[11:0];

assign tmp_67_fu_1340_p1 = tmp_36_fu_1335_p2[11:0];

assign tmp_68_fu_1144_p3 = p_Val2_22_fu_1079_p3[tmp_53_cast_fu_1140_p1];

assign tmp_6_cast_cast_fu_455_p1 = tmp_2_fu_451_p1;

assign tmp_6_fu_774_p2 = (12'd0 - p_Val2_2_reg_2112);

assign tmp_72_fu_1238_p3 = pos1_fu_1214_p2[32'd11];

assign tmp_75_fu_1548_p3 = pos1_reg_2294[32'd11];

assign tmp_7_fu_552_p1 = j3_reg_341;

assign tmp_83_fu_1869_p1 = grp_fu_1856_p2[7:0];

assign tmp_8_fu_482_p1 = i_reg_329;

assign tmp_9_fu_503_p2 = i_reg_329 << 7'd1;

assign tmp_fu_432_p1 = j_reg_318;

assign tmp_s_fu_752_p1 = i4_reg_365;

assign underflow_1_fu_1654_p2 = (neg_src_0_i_i_reg_2360 & brmerge121_i_i_fu_1649_p2);

assign underflow_2_fu_1783_p2 = (tmp_57_fu_1777_p2 & isneg_1_fu_1755_p3);

assign underflow_3_fu_1941_p2 = (isneg_2_fu_1861_p3 & brmerge39_i_fu_1935_p2);

assign underflow_6_not_fu_1953_p2 = (underflow_3_fu_1941_p2 ^ 1'd1);

assign underflow_fu_692_p2 = (tmp70_demorgan_fu_686_p2 ^ signbit_reg_2074);

assign underflow_not_fu_709_p2 = (tmp11_fu_703_p2 | p_38_i_i_fu_658_p2);

assign weights_dense10_V_address0 = tmp_10_fu_547_p1;

always @ (posedge ap_clk) begin
    tmp_reg_2003[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    p_shl_cast_reg_2026[2:0] <= 3'b000;
    p_shl_cast_reg_2026[9] <= 1'b0;
    p_shl3_cast_reg_2031[0] <= 1'b0;
    p_shl3_cast_reg_2031[7] <= 1'b0;
    tmp_20_reg_2204[11] <= 1'b0;
    p_Result_6_reg_2209[53:52] <= 2'b01;
    tmp_48_reg_2331[53:32] <= 22'b0000000000000000000000;
    tmp_4_reg_2391[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dev_digits_classify

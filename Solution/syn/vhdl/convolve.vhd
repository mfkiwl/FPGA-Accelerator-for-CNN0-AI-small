-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolve is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_V_ce0 : OUT STD_LOGIC;
    in_V_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
    outpool_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    outpool_V_ce0 : OUT STD_LOGIC;
    outpool_V_we0 : OUT STD_LOGIC;
    outpool_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    outpool_V_q0 : IN STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of convolve is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_23 : STD_LOGIC_VECTOR (7 downto 0) := "00100011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv12_7FF : STD_LOGIC_VECTOR (11 downto 0) := "011111111111";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv8_15 : STD_LOGIC_VECTOR (7 downto 0) := "00010101";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv8_1C : STD_LOGIC_VECTOR (7 downto 0) := "00011100";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv9_31 : STD_LOGIC_VECTOR (8 downto 0) := "000110001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal biases_convolution_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal biases_convolution_V_ce0 : STD_LOGIC;
    signal biases_convolution_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_convolution_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_convolution_s_ce0 : STD_LOGIC;
    signal weights_convolution_s_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_channel_cast_fu_385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_channel_cast_reg_1949 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_channel_cast1_fu_389_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_channel_cast1_reg_1954 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_channel_1_fu_399_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal out_channel_1_reg_1962 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond8_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_1972 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Val2_39_cast_cas_fu_420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_39_cast_cas_reg_1977 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_y_1_fu_434_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_y_1_reg_1985 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_72_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_1990 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_cast_fu_460_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_101_cast_reg_1994 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_99_fu_463_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_99_reg_2000 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal out_x_1_fu_473_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_x_1_reg_2011 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Val2_41_cast_fu_491_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond1_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal filter_y_1_fu_501_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal filter_y_1_reg_2024 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal next_mul_fu_507_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal next_mul_reg_2029 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond3_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_weight_fu_523_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_weight_reg_2034 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_data_fu_528_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_data_reg_2042 : STD_LOGIC_VECTOR (9 downto 0);
    signal pool_window_row_0_V_5_fu_589_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_5_reg_2060 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_8_fu_613_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_8_reg_2067 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_15_fu_629_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_15_reg_2074 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_3_fu_637_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_3_reg_2081 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_75_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_2088 : STD_LOGIC_VECTOR (0 downto 0);
    signal outpool_V_addr_reg_2092 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_45_fu_698_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_s_45_reg_2097 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_102_reg_2102 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_1_fu_896_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_37_0_1_reg_2117 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_157_0_1_fu_926_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_157_0_1_reg_2122 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_106_reg_2127 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_2_fu_1117_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_37_0_2_reg_2142 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_157_0_2_fu_1147_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_157_0_2_reg_2147 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_110_reg_2152 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_3_fu_1338_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_37_0_3_reg_2167 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_157_0_3_fu_1368_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_157_0_3_reg_2172 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_114_reg_2177 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_4_fu_1559_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_37_0_4_reg_2192 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_157_0_4_fu_1589_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_157_0_4_reg_2197 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_118_reg_2202 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_el_V_0_4_fu_1768_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal max_y_V_reg_2212 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i_7_fu_1782_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_058_2_50_fu_1808_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_1843_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_s_48_fu_1869_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond4_fu_1837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_channel_reg_262 : STD_LOGIC_VECTOR (2 downto 0);
    signal out_y_reg_273 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_x_reg_285 : STD_LOGIC_VECTOR (4 downto 0);
    signal pool_window_row_3_V_reg_297 : STD_LOGIC_VECTOR (11 downto 0);
    signal filter_y_reg_307 : STD_LOGIC_VECTOR (2 downto 0);
    signal phi_mul_reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_058_2_reg_329 : STD_LOGIC_VECTOR (11 downto 0);
    signal i1_reg_341 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_s_reg_352 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_reg_364 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_77_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_87_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_0_1_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_0_1_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_0_2_fu_952_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_0_2_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_0_3_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_0_3_fu_1178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_154_0_4_fu_1394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_0_4_fu_1399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_fu_1912_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pool_window_row_0_V_1_fu_122 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_2_fu_126 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_9_fu_130 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_12_fu_134 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_93_fu_1816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_410_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_98_fu_424_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_lshr_f_cast_fu_446_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1917_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_100_fu_479_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_cast_cast_fu_482_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_29_fu_486_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_cast_fu_513_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_76_fu_517_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sel_tmp_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_row_0_V_fu_563_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sel_tmp8_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_window_row_0_V_4_fu_576_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_6_fu_597_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_7_fu_605_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal pool_window_row_0_V_14_fu_621_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_375_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_fu_654_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_662_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_105_cast1_fu_650_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_85_fu_666_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_106_cast_fu_672_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_86_fu_676_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_107_cast_fu_681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_45_fu_698_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_s_45_fu_698_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_data_0_1_fu_717_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_weight_0_1_fu_712_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_732_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_80_fu_744_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_157_cast_fu_740_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_18_fu_747_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_81_fu_771_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_19_fu_761_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_20_fu_782_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_104_fu_788_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_753_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_7_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_not_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp28_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp29_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_1_fu_896_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_37_0_1_fu_896_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brmerge_i_i_i_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_0_not_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_902_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_61_fu_910_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_62_fu_918_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal index_data_0_2_fu_947_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_weight_0_2_fu_942_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_158_0_1_fu_965_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_157_0_1_cast_fu_962_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_38_0_1_fu_968_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_161_0_1_fu_992_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_39_0_1_fu_982_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_40_0_1_fu_1003_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_108_fu_1009_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_0_1_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_7_0_1_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_0_1_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_0_1_no_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_0_1_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_0_1_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_0_1_fu_1035_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_1_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_0_1_fu_1049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp30_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_1_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_0_1_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp31_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_2_fu_1117_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_37_0_2_fu_1117_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brmerge_i_i_i_0_1_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_1_not_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1123_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_64_fu_1131_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_65_fu_1139_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal index_data_0_3_fu_1168_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_weight_0_3_fu_1163_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_158_0_2_fu_1186_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_157_0_2_cast_fu_1183_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_38_0_2_fu_1189_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_161_0_2_fu_1213_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_39_0_2_fu_1203_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_40_0_2_fu_1224_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_112_fu_1230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_0_2_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_1195_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_7_0_2_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_0_2_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_0_2_no_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_0_2_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_0_2_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_0_2_fu_1256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_2_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_0_2_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_2_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_0_2_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp33_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_3_fu_1338_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_37_0_3_fu_1338_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brmerge_i_i_i_0_2_fu_1312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_2_not_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1344_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_67_fu_1352_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_68_fu_1360_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal index_data_0_4_fu_1389_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal index_weight_0_4_fu_1384_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_158_0_3_fu_1407_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_157_0_3_cast_fu_1404_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_38_0_3_fu_1410_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_161_0_3_fu_1434_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_39_0_3_fu_1424_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_40_0_3_fu_1445_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_116_fu_1451_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_0_3_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_1416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_7_0_3_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_0_3_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_0_3_no_fu_1485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_0_3_fu_1497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_0_3_fu_1503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_0_3_fu_1477_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_3_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_0_3_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp34_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_3_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_0_3_fu_1509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp35_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_37_0_4_fu_1559_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_37_0_4_fu_1559_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal brmerge_i_i_i_0_3_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_3_not_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1565_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_70_fu_1573_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_1581_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_158_0_4_fu_1608_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_157_0_4_cast_fu_1605_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_38_0_4_fu_1611_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_161_0_4_fu_1635_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_39_0_4_fu_1625_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_40_0_4_fu_1646_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_120_fu_1652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_1638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_0_4_fu_1660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_1617_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_7_0_4_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_0_4_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_0_4_no_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_0_4_fu_1698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_0_4_fu_1704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_0_4_fu_1678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_4_fu_1716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_168_0_4_fu_1692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp36_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_4_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_0_4_fu_1710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp37_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_0_4_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_0_4_not_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_40_0_4_mux_fu_1752_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_40_0_4_46_fu_1760_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal max_V_1_fu_1792_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_V_1_fu_1792_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_94_fu_1802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_V_fu_1853_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_V_fu_1853_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_92_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_shl4_fu_1881_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl4_cast_fu_1889_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_109_cast1_fu_1877_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_88_fu_1893_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_110_cast_fu_1899_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_89_fu_1903_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_111_cast_fu_1908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1917_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1917_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1917_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1917_p00 : STD_LOGIC_VECTOR (8 downto 0);

    component dev_digits_classidEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component dev_digits_classieOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component convolve_biases_cbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component convolve_weights_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    biases_convolution_V_U : component convolve_biases_cbkb
    generic map (
        DataWidth => 8,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => biases_convolution_V_address0,
        ce0 => biases_convolution_V_ce0,
        q0 => biases_convolution_V_q0);

    weights_convolution_s_U : component convolve_weights_cud
    generic map (
        DataWidth => 9,
        AddressRange => 175,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights_convolution_s_address0,
        ce0 => weights_convolution_s_ce0,
        q0 => weights_convolution_s_q0);

    dev_digits_classidEe_U1 : component dev_digits_classidEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        din4_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        din0 => pool_window_row_0_V_3_reg_2081,
        din1 => pool_window_row_0_V_15_reg_2074,
        din2 => pool_window_row_0_V_8_reg_2067,
        din3 => pool_window_row_0_V_5_reg_2060,
        din4 => max_V_1_fu_1792_p5,
        dout => max_V_1_fu_1792_p6);

    dev_digits_classidEe_U2 : component dev_digits_classidEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        din4_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        din0 => pool_window_row_0_V_3_reg_2081,
        din1 => pool_window_row_0_V_15_reg_2074,
        din2 => pool_window_row_0_V_8_reg_2067,
        din3 => pool_window_row_0_V_5_reg_2060,
        din4 => max_V_fu_1853_p5,
        dout => max_V_fu_1853_p6);

    dev_digits_classieOg_U3 : component dev_digits_classieOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 7,
        din2_WIDTH => 3,
        dout_WIDTH => 9)
    port map (
        din0 => grp_fu_1917_p0,
        din1 => grp_fu_1917_p1,
        din2 => grp_fu_1917_p2,
        dout => grp_fu_1917_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    filter_y_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                filter_y_reg_307 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                filter_y_reg_307 <= filter_y_1_reg_2024;
            end if; 
        end if;
    end process;

    i1_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_72_reg_1990 = ap_const_lv1_0) and (exitcond_fu_1776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_75_reg_2088 = ap_const_lv1_1))) then 
                i1_reg_341 <= i_7_fu_1782_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i1_reg_341 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_72_reg_1990 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_75_fu_645_p2 = ap_const_lv1_1) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then 
                i_reg_364 <= ap_const_lv3_0;
            elsif (((exitcond4_fu_1837_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i_reg_364 <= i_6_fu_1843_p2;
            end if; 
        end if;
    end process;

    out_channel_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_428_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_channel_reg_262 <= out_channel_1_reg_1962;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                out_channel_reg_262 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    out_x_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and ((tmp_72_reg_1990 = ap_const_lv1_1) or (tmp_75_reg_2088 = ap_const_lv1_0) or (exitcond_fu_1776_p2 = ap_const_lv1_1)))) then 
                out_x_reg_285 <= out_x_1_reg_2011;
            elsif (((exitcond9_fu_428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_x_reg_285 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    out_y_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond1_fu_467_p2 = ap_const_lv1_1))) then 
                out_y_reg_273 <= out_y_1_reg_1985;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                out_y_reg_273 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_058_2_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_72_reg_1990 = ap_const_lv1_0) and (exitcond_fu_1776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_75_reg_2088 = ap_const_lv1_1))) then 
                p_058_2_reg_329 <= p_058_2_50_fu_1808_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                p_058_2_reg_329 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    p_s_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_72_reg_1990 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_75_fu_645_p2 = ap_const_lv1_1) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then 
                p_s_reg_352 <= ap_const_lv12_0;
            elsif (((exitcond4_fu_1837_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_s_reg_352 <= p_s_48_fu_1869_p3;
            end if; 
        end if;
    end process;

    phi_mul_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_mul_reg_318 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                phi_mul_reg_318 <= next_mul_reg_2029;
            end if; 
        end if;
    end process;

    pool_window_row_3_V_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                pool_window_row_3_V_reg_297 <= p_Val2_41_cast_fu_491_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                pool_window_row_3_V_reg_297 <= current_el_V_0_4_fu_1768_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                filter_y_1_reg_2024 <= filter_y_1_fu_501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                index_data_reg_2042 <= index_data_fu_528_p3;
                index_weight_reg_2034 <= index_weight_fu_523_p2;
                next_mul_reg_2029 <= next_mul_fu_507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                max_y_V_reg_2212 <= outpool_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                out_channel_1_reg_1962 <= out_channel_1_fu_399_p2;
                    out_channel_cast1_reg_1954(2 downto 0) <= out_channel_cast1_fu_389_p1(2 downto 0);
                    out_channel_cast_reg_1949(2 downto 0) <= out_channel_cast_fu_385_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                out_x_1_reg_2011 <= out_x_1_fu_473_p2;
                tmp_99_reg_2000 <= tmp_99_fu_463_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                out_y_1_reg_1985 <= out_y_1_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_72_reg_1990 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_75_fu_645_p2 = ap_const_lv1_1) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then
                outpool_V_addr_reg_2092 <= tmp_87_fu_685_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p_Val2_37_0_1_reg_2117 <= p_Val2_37_0_1_fu_896_p2;
                tmp_106_reg_2127 <= p_Val2_37_0_1_fu_896_p2(8 downto 8);
                    tmp_157_0_1_reg_2122(20 downto 9) <= tmp_157_0_1_fu_926_p3(20 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                p_Val2_37_0_2_reg_2142 <= p_Val2_37_0_2_fu_1117_p2;
                tmp_110_reg_2152 <= p_Val2_37_0_2_fu_1117_p2(8 downto 8);
                    tmp_157_0_2_reg_2147(20 downto 9) <= tmp_157_0_2_fu_1147_p3(20 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                p_Val2_37_0_3_reg_2167 <= p_Val2_37_0_3_fu_1338_p2;
                tmp_114_reg_2177 <= p_Val2_37_0_3_fu_1338_p2(8 downto 8);
                    tmp_157_0_3_reg_2172(20 downto 9) <= tmp_157_0_3_fu_1368_p3(20 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                p_Val2_37_0_4_reg_2192 <= p_Val2_37_0_4_fu_1559_p2;
                tmp_118_reg_2202 <= p_Val2_37_0_4_fu_1559_p2(8 downto 8);
                    tmp_157_0_4_reg_2197(20 downto 9) <= tmp_157_0_4_fu_1589_p3(20 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                p_Val2_39_cast_cas_reg_1977 <= p_Val2_39_cast_cas_fu_420_p1;
                p_Val2_s_reg_1972 <= biases_convolution_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                p_Val2_s_45_reg_2097 <= p_Val2_s_45_fu_698_p2;
                tmp_102_reg_2102 <= p_Val2_s_45_fu_698_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and ((tmp_72_reg_1990 = ap_const_lv1_1) or (tmp_75_reg_2088 = ap_const_lv1_0) or (exitcond_fu_1776_p2 = ap_const_lv1_1)))) then
                pool_window_row_0_V_12_fu_134 <= pool_window_row_0_V_5_reg_2060;
                pool_window_row_0_V_1_fu_122 <= pool_window_row_0_V_3_reg_2081;
                pool_window_row_0_V_2_fu_126 <= pool_window_row_0_V_15_reg_2074;
                pool_window_row_0_V_9_fu_130 <= pool_window_row_0_V_8_reg_2067;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then
                pool_window_row_0_V_15_reg_2074 <= pool_window_row_0_V_15_fu_629_p3;
                pool_window_row_0_V_3_reg_2081 <= pool_window_row_0_V_3_fu_637_p3;
                pool_window_row_0_V_5_reg_2060 <= pool_window_row_0_V_5_fu_589_p3;
                pool_window_row_0_V_8_reg_2067 <= pool_window_row_0_V_8_fu_613_p3;
                tmp_75_reg_2088 <= tmp_75_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    tmp_101_cast_reg_1994(8 downto 0) <= tmp_101_cast_fu_460_p1(8 downto 0);
                tmp_72_reg_1990 <= tmp_72_fu_440_p2;
            end if;
        end if;
    end process;
    out_channel_cast_reg_1949(7 downto 3) <= "00000";
    out_channel_cast1_reg_1954(8 downto 3) <= "000000";
    tmp_101_cast_reg_1994(9) <= '0';
    tmp_157_0_1_reg_2122(8 downto 0) <= "000000000";
    tmp_157_0_2_reg_2147(8 downto 0) <= "000000000";
    tmp_157_0_3_reg_2172(8 downto 0) <= "000000000";
    tmp_157_0_4_reg_2197(8 downto 0) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond8_fu_393_p2, ap_CS_fsm_state4, tmp_72_reg_1990, exitcond9_fu_428_p2, ap_CS_fsm_state5, exitcond1_fu_467_p2, ap_CS_fsm_state6, exitcond3_fu_495_p2, tmp_75_fu_645_p2, tmp_75_reg_2088, ap_CS_fsm_state14, exitcond_fu_1776_p2, ap_CS_fsm_state15, exitcond4_fu_1837_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond8_fu_393_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((exitcond9_fu_428_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond1_fu_467_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((tmp_72_reg_1990 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_75_fu_645_p2 = ap_const_lv1_1) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((tmp_72_reg_1990 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_75_fu_645_p2 = ap_const_lv1_1) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((tmp_75_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_fu_495_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and ((tmp_72_reg_1990 = ap_const_lv1_1) or (tmp_75_reg_2088 = ap_const_lv1_0) or (exitcond_fu_1776_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond4_fu_1837_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond8_fu_393_p2)
    begin
        if ((((exitcond8_fu_393_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond8_fu_393_p2)
    begin
        if (((exitcond8_fu_393_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    biases_convolution_V_address0 <= tmp_s_fu_405_p1(3 - 1 downto 0);

    biases_convolution_V_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            biases_convolution_V_ce0 <= ap_const_logic_1;
        else 
            biases_convolution_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge40_demorgan_i_1_fu_1073_p2 <= (tmp_108_fu_1009_p3 and deleted_ones_0_1_fu_1035_p3);
    brmerge40_demorgan_i_2_fu_1294_p2 <= (tmp_112_fu_1230_p3 and deleted_ones_0_2_fu_1256_p3);
    brmerge40_demorgan_i_3_fu_1515_p2 <= (tmp_116_fu_1451_p3 and deleted_ones_0_3_fu_1477_p3);
    brmerge40_demorgan_i_4_fu_1716_p2 <= (tmp_120_fu_1652_p3 and deleted_ones_0_4_fu_1678_p3);
    brmerge40_demorgan_i_fu_852_p2 <= (tmp_104_fu_788_p3 and deleted_ones_fu_814_p3);
    brmerge_i_i_0_1_fu_1061_p2 <= (tmp_108_fu_1009_p3 or p_not_i_i_0_1_fu_1055_p2);
    brmerge_i_i_0_2_fu_1282_p2 <= (tmp_112_fu_1230_p3 or p_not_i_i_0_2_fu_1276_p2);
    brmerge_i_i_0_3_fu_1503_p2 <= (tmp_116_fu_1451_p3 or p_not_i_i_0_3_fu_1497_p2);
    brmerge_i_i_0_4_fu_1704_p2 <= (tmp_120_fu_1652_p3 or p_not_i_i_0_4_fu_1698_p2);
    brmerge_i_i_fu_840_p2 <= (tmp_104_fu_788_p3 or p_not_i_i_fu_834_p2);
    brmerge_i_i_i_0_1_fu_1091_p2 <= (underflow_0_1_fu_1085_p2 or overflow_0_1_fu_1067_p2);
    brmerge_i_i_i_0_2_fu_1312_p2 <= (underflow_0_2_fu_1306_p2 or overflow_0_2_fu_1288_p2);
    brmerge_i_i_i_0_3_fu_1533_p2 <= (underflow_0_3_fu_1527_p2 or overflow_0_3_fu_1509_p2);
    brmerge_i_i_i_0_4_fu_1734_p2 <= (underflow_0_4_fu_1728_p2 or overflow_0_4_fu_1710_p2);
    brmerge_i_i_i_fu_870_p2 <= (underflow_fu_864_p2 or overflow_fu_846_p2);
    carry_7_0_1_fu_1023_p2 <= (tmp_165_0_1_fu_1017_p2 and tmp_107_fu_995_p3);
    carry_7_0_2_fu_1244_p2 <= (tmp_165_0_2_fu_1238_p2 and tmp_111_fu_1216_p3);
    carry_7_0_3_fu_1465_p2 <= (tmp_165_0_3_fu_1459_p2 and tmp_115_fu_1437_p3);
    carry_7_0_4_fu_1666_p2 <= (tmp_165_0_4_fu_1660_p2 and tmp_119_fu_1638_p3);
    carry_7_fu_802_p2 <= (tmp_82_fu_796_p2 and tmp_103_fu_774_p3);
    current_el_V_0_4_fu_1768_p3 <= 
        p_Val2_40_0_4_mux_fu_1752_p3 when (underflow_0_4_not_fu_1746_p2(0) = '1') else 
        p_Val2_40_0_4_46_fu_1760_p3;
    deleted_ones_0_1_fu_1035_p3 <= 
        tmp_167_0_1_fu_1029_p2 when (carry_7_0_1_fu_1023_p2(0) = '1') else 
        tmp_105_fu_974_p3;
    deleted_ones_0_2_fu_1256_p3 <= 
        tmp_167_0_2_fu_1250_p2 when (carry_7_0_2_fu_1244_p2(0) = '1') else 
        tmp_109_fu_1195_p3;
    deleted_ones_0_3_fu_1477_p3 <= 
        tmp_167_0_3_fu_1471_p2 when (carry_7_0_3_fu_1465_p2(0) = '1') else 
        tmp_113_fu_1416_p3;
    deleted_ones_0_4_fu_1678_p3 <= 
        tmp_167_0_4_fu_1672_p2 when (carry_7_0_4_fu_1666_p2(0) = '1') else 
        tmp_117_fu_1617_p3;
    deleted_ones_fu_814_p3 <= 
        tmp_83_fu_808_p2 when (carry_7_fu_802_p2(0) = '1') else 
        tmp_101_fu_753_p3;
    exitcond1_fu_467_p2 <= "1" when (out_x_reg_285 = ap_const_lv5_1C) else "0";
    exitcond3_fu_495_p2 <= "1" when (filter_y_reg_307 = ap_const_lv3_5) else "0";
    exitcond4_fu_1837_p2 <= "1" when (i_reg_364 = ap_const_lv3_4) else "0";
    exitcond8_fu_393_p2 <= "1" when (out_channel_reg_262 = ap_const_lv3_7) else "0";
    exitcond9_fu_428_p2 <= "1" when (out_y_reg_273 = ap_const_lv5_1C) else "0";
    exitcond_fu_1776_p2 <= "1" when (i1_reg_341 = ap_const_lv3_4) else "0";
    filter_y_1_fu_501_p2 <= std_logic_vector(unsigned(filter_y_reg_307) + unsigned(ap_const_lv3_1));
    grp_fu_1917_p0 <= grp_fu_1917_p00(3 - 1 downto 0);
    grp_fu_1917_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_cast_fu_446_p4),9));
    grp_fu_1917_p1 <= ap_const_lv9_31(7 - 1 downto 0);
    grp_fu_1917_p2 <= out_channel_cast1_reg_1954(3 - 1 downto 0);
    grp_fu_375_p4 <= out_x_reg_285(4 downto 2);
    i_6_fu_1843_p2 <= std_logic_vector(unsigned(i_reg_364) + unsigned(ap_const_lv3_1));
    i_7_fu_1782_p2 <= std_logic_vector(unsigned(i1_reg_341) + unsigned(ap_const_lv3_1));

    in_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, tmp_77_fu_536_p1, tmp_154_0_1_fu_722_p1, tmp_154_0_2_fu_952_p1, tmp_154_0_3_fu_1173_p1, tmp_154_0_4_fu_1394_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            in_V_address0 <= tmp_154_0_4_fu_1394_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            in_V_address0 <= tmp_154_0_3_fu_1173_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            in_V_address0 <= tmp_154_0_2_fu_952_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            in_V_address0 <= tmp_154_0_1_fu_722_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            in_V_address0 <= tmp_77_fu_536_p1(10 - 1 downto 0);
        else 
            in_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    in_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            in_V_ce0 <= ap_const_logic_1;
        else 
            in_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    index_data_0_1_fu_717_p2 <= std_logic_vector(unsigned(index_data_reg_2042) + unsigned(ap_const_lv10_1));
    index_data_0_2_fu_947_p2 <= std_logic_vector(unsigned(index_data_reg_2042) + unsigned(ap_const_lv10_2));
    index_data_0_3_fu_1168_p2 <= std_logic_vector(unsigned(index_data_reg_2042) + unsigned(ap_const_lv10_3));
    index_data_0_4_fu_1389_p2 <= std_logic_vector(unsigned(index_data_reg_2042) + unsigned(ap_const_lv10_4));
    index_data_fu_528_p3 <= (tmp_76_fu_517_p2 & out_x_reg_285);
    index_weight_0_1_fu_712_p2 <= std_logic_vector(unsigned(index_weight_reg_2034) + unsigned(ap_const_lv8_7));
    index_weight_0_2_fu_942_p2 <= std_logic_vector(unsigned(index_weight_reg_2034) + unsigned(ap_const_lv8_E));
    index_weight_0_3_fu_1163_p2 <= std_logic_vector(unsigned(index_weight_reg_2034) + unsigned(ap_const_lv8_15));
    index_weight_0_4_fu_1384_p2 <= std_logic_vector(unsigned(index_weight_reg_2034) + unsigned(ap_const_lv8_1C));
    index_weight_fu_523_p2 <= std_logic_vector(unsigned(phi_mul_reg_318) + unsigned(out_channel_cast_reg_1949));
    max_V_1_fu_1792_p5 <= i1_reg_341(2 - 1 downto 0);
    max_V_fu_1853_p5 <= i_reg_364(2 - 1 downto 0);
    next_mul_fu_507_p2 <= std_logic_vector(unsigned(phi_mul_reg_318) + unsigned(ap_const_lv8_23));
    out_channel_1_fu_399_p2 <= std_logic_vector(unsigned(out_channel_reg_262) + unsigned(ap_const_lv3_1));
    out_channel_cast1_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_channel_reg_262),9));
    out_channel_cast_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_channel_reg_262),8));
    out_x_1_fu_473_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(out_x_reg_285));
    out_y_1_fu_434_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(out_y_reg_273));

    outpool_V_address0_assign_proc : process(ap_CS_fsm_state6, outpool_V_addr_reg_2092, ap_CS_fsm_state14, ap_CS_fsm_state15, tmp_87_fu_685_p1, tmp_90_fu_1912_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outpool_V_address0 <= tmp_90_fu_1912_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            outpool_V_address0 <= outpool_V_addr_reg_2092;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            outpool_V_address0 <= tmp_87_fu_685_p1(9 - 1 downto 0);
        else 
            outpool_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    outpool_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            outpool_V_ce0 <= ap_const_logic_1;
        else 
            outpool_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outpool_V_d0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, p_058_2_reg_329, p_s_reg_352)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outpool_V_d0 <= p_s_reg_352;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            outpool_V_d0 <= p_058_2_reg_329;
        else 
            outpool_V_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    outpool_V_we0_assign_proc : process(tmp_72_reg_1990, tmp_75_reg_2088, ap_CS_fsm_state14, exitcond_fu_1776_p2, ap_CS_fsm_state15, exitcond4_fu_1837_p2, tmp_93_fu_1816_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (exitcond4_fu_1837_p2 = ap_const_lv1_1)) or ((tmp_72_reg_1990 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_93_fu_1816_p2 = ap_const_lv1_1) and (exitcond_fu_1776_p2 = ap_const_lv1_1) and (tmp_75_reg_2088 = ap_const_lv1_1)))) then 
            outpool_V_we0 <= ap_const_logic_1;
        else 
            outpool_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    overflow_0_1_fu_1067_p2 <= (tmp_167_0_1_fu_1029_p2 and brmerge_i_i_0_1_fu_1061_p2);
    overflow_0_2_fu_1288_p2 <= (tmp_167_0_2_fu_1250_p2 and brmerge_i_i_0_2_fu_1282_p2);
    overflow_0_3_fu_1509_p2 <= (tmp_167_0_3_fu_1471_p2 and brmerge_i_i_0_3_fu_1503_p2);
    overflow_0_4_fu_1710_p2 <= (tmp_167_0_4_fu_1672_p2 and brmerge_i_i_0_4_fu_1704_p2);
    overflow_fu_846_p2 <= (tmp_83_fu_808_p2 and brmerge_i_i_fu_840_p2);
    p_058_2_50_fu_1808_p3 <= 
        max_V_1_fu_1792_p6 when (tmp_94_fu_1802_p2(0) = '1') else 
        p_058_2_reg_329;
    p_Result_50_0_1_no_fu_1043_p2 <= (tmp_107_fu_995_p3 xor ap_const_lv1_1);
    p_Result_50_0_2_no_fu_1264_p2 <= (tmp_111_fu_1216_p3 xor ap_const_lv1_1);
    p_Result_50_0_3_no_fu_1485_p2 <= (tmp_115_fu_1437_p3 xor ap_const_lv1_1);
    p_Result_50_0_4_no_fu_1686_p2 <= (tmp_119_fu_1638_p3 xor ap_const_lv1_1);
    p_Result_50_not_fu_822_p2 <= (tmp_103_fu_774_p3 xor ap_const_lv1_1);
    p_Val2_18_fu_747_p2 <= std_logic_vector(signed(tmp_80_fu_744_p1) + signed(tmp_157_cast_fu_740_p1));
    p_Val2_19_fu_761_p4 <= p_Val2_18_fu_747_p2(20 downto 9);
    p_Val2_20_fu_782_p2 <= std_logic_vector(unsigned(tmp_81_fu_771_p1) + unsigned(p_Val2_19_fu_761_p4));
    p_Val2_29_fu_486_p2 <= std_logic_vector(unsigned(tmp_102_cast_cast_fu_482_p1) + unsigned(p_Val2_39_cast_cas_reg_1977));
    p_Val2_37_0_1_fu_896_p0 <= weights_convolution_s_q0;
    p_Val2_37_0_1_fu_896_p1 <= in_V_q0;
    p_Val2_37_0_1_fu_896_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_37_0_1_fu_896_p0) * signed(p_Val2_37_0_1_fu_896_p1))), 18));
    p_Val2_37_0_2_fu_1117_p0 <= weights_convolution_s_q0;
    p_Val2_37_0_2_fu_1117_p1 <= in_V_q0;
    p_Val2_37_0_2_fu_1117_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_37_0_2_fu_1117_p0) * signed(p_Val2_37_0_2_fu_1117_p1))), 18));
    p_Val2_37_0_3_fu_1338_p0 <= weights_convolution_s_q0;
    p_Val2_37_0_3_fu_1338_p1 <= in_V_q0;
    p_Val2_37_0_3_fu_1338_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_37_0_3_fu_1338_p0) * signed(p_Val2_37_0_3_fu_1338_p1))), 18));
    p_Val2_37_0_4_fu_1559_p0 <= weights_convolution_s_q0;
    p_Val2_37_0_4_fu_1559_p1 <= in_V_q0;
    p_Val2_37_0_4_fu_1559_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_37_0_4_fu_1559_p0) * signed(p_Val2_37_0_4_fu_1559_p1))), 18));
    p_Val2_38_0_1_fu_968_p2 <= std_logic_vector(signed(tmp_158_0_1_fu_965_p1) + signed(tmp_157_0_1_cast_fu_962_p1));
    p_Val2_38_0_2_fu_1189_p2 <= std_logic_vector(signed(tmp_158_0_2_fu_1186_p1) + signed(tmp_157_0_2_cast_fu_1183_p1));
    p_Val2_38_0_3_fu_1410_p2 <= std_logic_vector(signed(tmp_158_0_3_fu_1407_p1) + signed(tmp_157_0_3_cast_fu_1404_p1));
    p_Val2_38_0_4_fu_1611_p2 <= std_logic_vector(signed(tmp_158_0_4_fu_1608_p1) + signed(tmp_157_0_4_cast_fu_1605_p1));
    p_Val2_39_0_1_fu_982_p4 <= p_Val2_38_0_1_fu_968_p2(20 downto 9);
    p_Val2_39_0_2_fu_1203_p4 <= p_Val2_38_0_2_fu_1189_p2(20 downto 9);
    p_Val2_39_0_3_fu_1424_p4 <= p_Val2_38_0_3_fu_1410_p2(20 downto 9);
    p_Val2_39_0_4_fu_1625_p4 <= p_Val2_38_0_4_fu_1611_p2(20 downto 9);
        p_Val2_39_cast_cas_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_91_fu_410_p4),8));

    p_Val2_40_0_1_fu_1003_p2 <= std_logic_vector(unsigned(tmp_161_0_1_fu_992_p1) + unsigned(p_Val2_39_0_1_fu_982_p4));
    p_Val2_40_0_2_fu_1224_p2 <= std_logic_vector(unsigned(tmp_161_0_2_fu_1213_p1) + unsigned(p_Val2_39_0_2_fu_1203_p4));
    p_Val2_40_0_3_fu_1445_p2 <= std_logic_vector(unsigned(tmp_161_0_3_fu_1434_p1) + unsigned(p_Val2_39_0_3_fu_1424_p4));
    p_Val2_40_0_4_46_fu_1760_p3 <= 
        ap_const_lv12_800 when (underflow_0_4_fu_1728_p2(0) = '1') else 
        p_Val2_40_0_4_fu_1646_p2;
    p_Val2_40_0_4_fu_1646_p2 <= std_logic_vector(unsigned(tmp_161_0_4_fu_1635_p1) + unsigned(p_Val2_39_0_4_fu_1625_p4));
    p_Val2_40_0_4_mux_fu_1752_p3 <= 
        ap_const_lv12_7FF when (brmerge_i_i_i_0_4_fu_1734_p2(0) = '1') else 
        p_Val2_40_0_4_fu_1646_p2;
        p_Val2_41_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_29_fu_486_p2),12));

    p_Val2_s_45_fu_698_p0 <= weights_convolution_s_q0;
    p_Val2_s_45_fu_698_p1 <= in_V_q0;
    p_Val2_s_45_fu_698_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_45_fu_698_p0) * signed(p_Val2_s_45_fu_698_p1))), 18));
    p_lshr_f_cast_fu_446_p4 <= out_y_reg_273(4 downto 2);
    p_not_i_i_0_1_fu_1055_p2 <= (tmp_105_fu_974_p3 xor carry_7_0_1_fu_1023_p2);
    p_not_i_i_0_2_fu_1276_p2 <= (tmp_109_fu_1195_p3 xor carry_7_0_2_fu_1244_p2);
    p_not_i_i_0_3_fu_1497_p2 <= (tmp_113_fu_1416_p3 xor carry_7_0_3_fu_1465_p2);
    p_not_i_i_0_4_fu_1698_p2 <= (tmp_117_fu_1617_p3 xor carry_7_0_4_fu_1666_p2);
    p_not_i_i_fu_834_p2 <= (tmp_101_fu_753_p3 xor carry_7_fu_802_p2);
    p_s_48_fu_1869_p3 <= 
        max_V_fu_1853_p6 when (tmp_92_fu_1863_p2(0) = '1') else 
        p_s_reg_352;
    p_shl4_cast_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_1881_p3),7));
    p_shl4_fu_1881_p3 <= (grp_fu_375_p4 & ap_const_lv3_0);
    p_shl_cast_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_654_p3),7));
    p_shl_fu_654_p3 <= (grp_fu_375_p4 & ap_const_lv3_0);
    pool_window_row_0_V_14_fu_621_p3 <= 
        pool_window_row_3_V_reg_297 when (sel_tmp6_fu_571_p2(0) = '1') else 
        pool_window_row_0_V_2_fu_126;
    pool_window_row_0_V_15_fu_629_p3 <= 
        pool_window_row_0_V_2_fu_126 when (sel_tmp8_fu_584_p2(0) = '1') else 
        pool_window_row_0_V_14_fu_621_p3;
    pool_window_row_0_V_3_fu_637_p3 <= 
        pool_window_row_3_V_reg_297 when (sel_tmp8_fu_584_p2(0) = '1') else 
        pool_window_row_0_V_1_fu_122;
    pool_window_row_0_V_4_fu_576_p3 <= 
        pool_window_row_0_V_12_fu_134 when (sel_tmp6_fu_571_p2(0) = '1') else 
        pool_window_row_0_V_fu_563_p3;
    pool_window_row_0_V_5_fu_589_p3 <= 
        pool_window_row_0_V_12_fu_134 when (sel_tmp8_fu_584_p2(0) = '1') else 
        pool_window_row_0_V_4_fu_576_p3;
    pool_window_row_0_V_6_fu_597_p3 <= 
        pool_window_row_3_V_reg_297 when (sel_tmp_fu_558_p2(0) = '1') else 
        pool_window_row_0_V_9_fu_130;
    pool_window_row_0_V_7_fu_605_p3 <= 
        pool_window_row_0_V_9_fu_130 when (sel_tmp6_fu_571_p2(0) = '1') else 
        pool_window_row_0_V_6_fu_597_p3;
    pool_window_row_0_V_8_fu_613_p3 <= 
        pool_window_row_0_V_9_fu_130 when (sel_tmp8_fu_584_p2(0) = '1') else 
        pool_window_row_0_V_7_fu_605_p3;
    pool_window_row_0_V_fu_563_p3 <= 
        pool_window_row_0_V_12_fu_134 when (sel_tmp_fu_558_p2(0) = '1') else 
        pool_window_row_3_V_reg_297;
    sel_tmp6_fu_571_p2 <= "1" when (tmp_99_reg_2000 = ap_const_lv2_1) else "0";
    sel_tmp8_fu_584_p2 <= "1" when (tmp_99_reg_2000 = ap_const_lv2_0) else "0";
    sel_tmp_fu_558_p2 <= "1" when (tmp_99_reg_2000 = ap_const_lv2_2) else "0";
    tmp28_fu_858_p2 <= (tmp_84_fu_828_p2 xor brmerge40_demorgan_i_fu_852_p2);
    tmp29_fu_876_p2 <= (tmp_83_fu_808_p2 or brmerge40_demorgan_i_fu_852_p2);
    tmp30_fu_1079_p2 <= (tmp_168_0_1_fu_1049_p2 xor brmerge40_demorgan_i_1_fu_1073_p2);
    tmp31_fu_1097_p2 <= (tmp_167_0_1_fu_1029_p2 or brmerge40_demorgan_i_1_fu_1073_p2);
    tmp32_fu_1300_p2 <= (tmp_168_0_2_fu_1270_p2 xor brmerge40_demorgan_i_2_fu_1294_p2);
    tmp33_fu_1318_p2 <= (tmp_167_0_2_fu_1250_p2 or brmerge40_demorgan_i_2_fu_1294_p2);
    tmp34_fu_1521_p2 <= (tmp_168_0_3_fu_1491_p2 xor brmerge40_demorgan_i_3_fu_1515_p2);
    tmp35_fu_1539_p2 <= (tmp_167_0_3_fu_1471_p2 or brmerge40_demorgan_i_3_fu_1515_p2);
    tmp36_fu_1722_p2 <= (tmp_168_0_4_fu_1692_p2 xor brmerge40_demorgan_i_4_fu_1716_p2);
    tmp37_fu_1740_p2 <= (tmp_167_0_4_fu_1672_p2 or brmerge40_demorgan_i_4_fu_1716_p2);
    tmp_100_fu_479_p1 <= p_Val2_s_reg_1972(1 - 1 downto 0);
    tmp_101_cast_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1917_p3),10));
    tmp_101_fu_753_p3 <= p_Val2_18_fu_747_p2(21 downto 21);
    tmp_102_cast_cast_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_100_fu_479_p1),8));
    tmp_103_fu_774_p3 <= p_Val2_18_fu_747_p2(20 downto 20);
    tmp_104_fu_788_p3 <= p_Val2_20_fu_782_p2(11 downto 11);
    tmp_105_cast1_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),7));
    tmp_105_fu_974_p3 <= p_Val2_38_0_1_fu_968_p2(21 downto 21);
        tmp_106_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_85_fu_666_p2),10));

        tmp_107_cast_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_86_fu_676_p2),32));

    tmp_107_fu_995_p3 <= p_Val2_38_0_1_fu_968_p2(20 downto 20);
    tmp_108_fu_1009_p3 <= p_Val2_40_0_1_fu_1003_p2(11 downto 11);
    tmp_109_cast1_fu_1877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_375_p4),7));
    tmp_109_fu_1195_p3 <= p_Val2_38_0_2_fu_1189_p2(21 downto 21);
        tmp_110_cast_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_88_fu_1893_p2),10));

        tmp_111_cast_fu_1908_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_89_fu_1903_p2),32));

    tmp_111_fu_1216_p3 <= p_Val2_38_0_2_fu_1189_p2(20 downto 20);
    tmp_112_fu_1230_p3 <= p_Val2_40_0_2_fu_1224_p2(11 downto 11);
    tmp_113_fu_1416_p3 <= p_Val2_38_0_3_fu_1410_p2(21 downto 21);
    tmp_115_fu_1437_p3 <= p_Val2_38_0_3_fu_1410_p2(20 downto 20);
    tmp_116_fu_1451_p3 <= p_Val2_40_0_3_fu_1445_p2(11 downto 11);
    tmp_117_fu_1617_p3 <= p_Val2_38_0_4_fu_1611_p2(21 downto 21);
    tmp_119_fu_1638_p3 <= p_Val2_38_0_4_fu_1611_p2(20 downto 20);
    tmp_120_fu_1652_p3 <= p_Val2_40_0_4_fu_1646_p2(11 downto 11);
    tmp_154_0_1_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_data_0_1_fu_717_p2),64));
    tmp_154_0_2_fu_952_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_data_0_2_fu_947_p2),64));
    tmp_154_0_3_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_data_0_3_fu_1168_p2),64));
    tmp_154_0_4_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_data_0_4_fu_1389_p2),64));
    tmp_155_0_1_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_weight_0_1_fu_712_p2),64));
    tmp_155_0_2_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_weight_0_2_fu_942_p2),64));
    tmp_155_0_3_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_weight_0_3_fu_1163_p2),64));
    tmp_155_0_4_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_weight_0_4_fu_1384_p2),64));
        tmp_157_0_1_cast_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_157_0_1_reg_2122),22));

    tmp_157_0_1_fu_926_p3 <= (tmp_62_fu_918_p3 & ap_const_lv9_0);
        tmp_157_0_2_cast_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_157_0_2_reg_2147),22));

    tmp_157_0_2_fu_1147_p3 <= (tmp_65_fu_1139_p3 & ap_const_lv9_0);
        tmp_157_0_3_cast_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_157_0_3_reg_2172),22));

    tmp_157_0_3_fu_1368_p3 <= (tmp_68_fu_1360_p3 & ap_const_lv9_0);
        tmp_157_0_4_cast_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_157_0_4_reg_2197),22));

    tmp_157_0_4_fu_1589_p3 <= (tmp_71_fu_1581_p3 & ap_const_lv9_0);
        tmp_157_cast_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_79_fu_732_p3),22));

        tmp_158_0_1_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_0_1_reg_2117),22));

        tmp_158_0_2_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_0_2_reg_2142),22));

        tmp_158_0_3_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_0_3_reg_2167),22));

        tmp_158_0_4_fu_1608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_37_0_4_reg_2192),22));

    tmp_161_0_1_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_reg_2127),12));
    tmp_161_0_2_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_reg_2152),12));
    tmp_161_0_3_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_reg_2177),12));
    tmp_161_0_4_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_reg_2202),12));
    tmp_165_0_1_fu_1017_p2 <= (tmp_108_fu_1009_p3 xor ap_const_lv1_1);
    tmp_165_0_2_fu_1238_p2 <= (tmp_112_fu_1230_p3 xor ap_const_lv1_1);
    tmp_165_0_3_fu_1459_p2 <= (tmp_116_fu_1451_p3 xor ap_const_lv1_1);
    tmp_165_0_4_fu_1660_p2 <= (tmp_120_fu_1652_p3 xor ap_const_lv1_1);
    tmp_167_0_1_fu_1029_p2 <= (tmp_105_fu_974_p3 xor ap_const_lv1_1);
    tmp_167_0_2_fu_1250_p2 <= (tmp_109_fu_1195_p3 xor ap_const_lv1_1);
    tmp_167_0_3_fu_1471_p2 <= (tmp_113_fu_1416_p3 xor ap_const_lv1_1);
    tmp_167_0_4_fu_1672_p2 <= (tmp_117_fu_1617_p3 xor ap_const_lv1_1);
    tmp_168_0_1_fu_1049_p2 <= (tmp_108_fu_1009_p3 or p_Result_50_0_1_no_fu_1043_p2);
    tmp_168_0_2_fu_1270_p2 <= (tmp_112_fu_1230_p3 or p_Result_50_0_2_no_fu_1264_p2);
    tmp_168_0_3_fu_1491_p2 <= (tmp_116_fu_1451_p3 or p_Result_50_0_3_no_fu_1485_p2);
    tmp_168_0_4_fu_1692_p2 <= (tmp_120_fu_1652_p3 or p_Result_50_0_4_no_fu_1686_p2);
    tmp_38_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filter_y_reg_307),5));
    tmp_61_fu_910_p3 <= 
        ap_const_lv12_800 when (underflow_fu_864_p2(0) = '1') else 
        p_Val2_20_fu_782_p2;
    tmp_62_fu_918_p3 <= 
        tmp_fu_902_p3 when (underflow_0_0_not_fu_882_p2(0) = '1') else 
        tmp_61_fu_910_p3;
    tmp_63_fu_1123_p3 <= 
        ap_const_lv12_7FF when (brmerge_i_i_i_0_1_fu_1091_p2(0) = '1') else 
        p_Val2_40_0_1_fu_1003_p2;
    tmp_64_fu_1131_p3 <= 
        ap_const_lv12_800 when (underflow_0_1_fu_1085_p2(0) = '1') else 
        p_Val2_40_0_1_fu_1003_p2;
    tmp_65_fu_1139_p3 <= 
        tmp_63_fu_1123_p3 when (underflow_0_1_not_fu_1103_p2(0) = '1') else 
        tmp_64_fu_1131_p3;
    tmp_66_fu_1344_p3 <= 
        ap_const_lv12_7FF when (brmerge_i_i_i_0_2_fu_1312_p2(0) = '1') else 
        p_Val2_40_0_2_fu_1224_p2;
    tmp_67_fu_1352_p3 <= 
        ap_const_lv12_800 when (underflow_0_2_fu_1306_p2(0) = '1') else 
        p_Val2_40_0_2_fu_1224_p2;
    tmp_68_fu_1360_p3 <= 
        tmp_66_fu_1344_p3 when (underflow_0_2_not_fu_1324_p2(0) = '1') else 
        tmp_67_fu_1352_p3;
    tmp_69_fu_1565_p3 <= 
        ap_const_lv12_7FF when (brmerge_i_i_i_0_3_fu_1533_p2(0) = '1') else 
        p_Val2_40_0_3_fu_1445_p2;
    tmp_70_fu_1573_p3 <= 
        ap_const_lv12_800 when (underflow_0_3_fu_1527_p2(0) = '1') else 
        p_Val2_40_0_3_fu_1445_p2;
    tmp_71_fu_1581_p3 <= 
        tmp_69_fu_1565_p3 when (underflow_0_3_not_fu_1545_p2(0) = '1') else 
        tmp_70_fu_1573_p3;
    tmp_72_fu_440_p2 <= "1" when (tmp_98_fu_424_p1 = ap_const_lv2_0) else "0";
    tmp_75_fu_645_p2 <= "1" when (tmp_99_reg_2000 = ap_const_lv2_3) else "0";
    tmp_76_fu_517_p2 <= std_logic_vector(unsigned(tmp_38_cast_fu_513_p1) + unsigned(out_y_reg_273));
    tmp_77_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_data_fu_528_p3),64));
    tmp_78_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_weight_fu_523_p2),64));
    tmp_79_fu_732_p3 <= (pool_window_row_3_V_reg_297 & ap_const_lv9_0);
        tmp_80_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_45_reg_2097),22));

    tmp_81_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_reg_2102),12));
    tmp_82_fu_796_p2 <= (tmp_104_fu_788_p3 xor ap_const_lv1_1);
    tmp_83_fu_808_p2 <= (tmp_101_fu_753_p3 xor ap_const_lv1_1);
    tmp_84_fu_828_p2 <= (tmp_104_fu_788_p3 or p_Result_50_not_fu_822_p2);
    tmp_85_fu_666_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_662_p1) - unsigned(tmp_105_cast1_fu_650_p1));
    tmp_86_fu_676_p2 <= std_logic_vector(signed(tmp_106_cast_fu_672_p1) + signed(tmp_101_cast_reg_1994));
    tmp_87_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_107_cast_fu_681_p1),64));
    tmp_88_fu_1893_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_1889_p1) - unsigned(tmp_109_cast1_fu_1877_p1));
    tmp_89_fu_1903_p2 <= std_logic_vector(signed(tmp_110_cast_fu_1899_p1) + signed(tmp_101_cast_reg_1994));
    tmp_90_fu_1912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_cast_fu_1908_p1),64));
    tmp_91_fu_410_p4 <= biases_convolution_V_q0(7 downto 1);
    tmp_92_fu_1863_p2 <= "1" when (signed(max_V_fu_1853_p6) > signed(p_s_reg_352)) else "0";
    tmp_93_fu_1816_p2 <= "1" when (signed(p_058_2_reg_329) > signed(max_y_V_reg_2212)) else "0";
    tmp_94_fu_1802_p2 <= "1" when (signed(max_V_1_fu_1792_p6) > signed(p_058_2_reg_329)) else "0";
    tmp_98_fu_424_p1 <= out_y_reg_273(2 - 1 downto 0);
    tmp_99_fu_463_p1 <= out_x_reg_285(2 - 1 downto 0);
    tmp_fu_902_p3 <= 
        ap_const_lv12_7FF when (brmerge_i_i_i_fu_870_p2(0) = '1') else 
        p_Val2_20_fu_782_p2;
    tmp_s_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_channel_reg_262),64));
    underflow_0_0_not_fu_882_p2 <= (tmp29_fu_876_p2 or carry_7_fu_802_p2);
    underflow_0_1_fu_1085_p2 <= (tmp_105_fu_974_p3 and tmp30_fu_1079_p2);
    underflow_0_1_not_fu_1103_p2 <= (tmp31_fu_1097_p2 or carry_7_0_1_fu_1023_p2);
    underflow_0_2_fu_1306_p2 <= (tmp_109_fu_1195_p3 and tmp32_fu_1300_p2);
    underflow_0_2_not_fu_1324_p2 <= (tmp33_fu_1318_p2 or carry_7_0_2_fu_1244_p2);
    underflow_0_3_fu_1527_p2 <= (tmp_113_fu_1416_p3 and tmp34_fu_1521_p2);
    underflow_0_3_not_fu_1545_p2 <= (tmp35_fu_1539_p2 or carry_7_0_3_fu_1465_p2);
    underflow_0_4_fu_1728_p2 <= (tmp_117_fu_1617_p3 and tmp36_fu_1722_p2);
    underflow_0_4_not_fu_1746_p2 <= (tmp37_fu_1740_p2 or carry_7_0_4_fu_1666_p2);
    underflow_fu_864_p2 <= (tmp_101_fu_753_p3 and tmp28_fu_858_p2);

    weights_convolution_s_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, tmp_78_fu_541_p1, tmp_155_0_1_fu_727_p1, tmp_155_0_2_fu_957_p1, tmp_155_0_3_fu_1178_p1, tmp_155_0_4_fu_1399_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weights_convolution_s_address0 <= tmp_155_0_4_fu_1399_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weights_convolution_s_address0 <= tmp_155_0_3_fu_1178_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weights_convolution_s_address0 <= tmp_155_0_2_fu_957_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            weights_convolution_s_address0 <= tmp_155_0_1_fu_727_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            weights_convolution_s_address0 <= tmp_78_fu_541_p1(8 - 1 downto 0);
        else 
            weights_convolution_s_address0 <= "XXXXXXXX";
        end if; 
    end process;


    weights_convolution_s_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            weights_convolution_s_ce0 <= ap_const_logic_1;
        else 
            weights_convolution_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;

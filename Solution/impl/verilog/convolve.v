// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convolve (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_address0,
        in_V_ce0,
        in_V_q0,
        outpool_V_address0,
        outpool_V_ce0,
        outpool_V_we0,
        outpool_V_d0,
        outpool_V_q0
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] in_V_address0;
output   in_V_ce0;
input  [8:0] in_V_q0;
output  [8:0] outpool_V_address0;
output   outpool_V_ce0;
output   outpool_V_we0;
output  [11:0] outpool_V_d0;
input  [11:0] outpool_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] in_V_address0;
reg in_V_ce0;
reg[8:0] outpool_V_address0;
reg outpool_V_ce0;
reg outpool_V_we0;
reg[11:0] outpool_V_d0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] biases_convolution_V_address0;
reg    biases_convolution_V_ce0;
wire   [7:0] biases_convolution_V_q0;
reg   [7:0] weights_convolution_s_address0;
reg    weights_convolution_s_ce0;
wire   [8:0] weights_convolution_s_q0;
wire   [7:0] out_channel_cast_fu_385_p1;
reg   [7:0] out_channel_cast_reg_1949;
wire    ap_CS_fsm_state2;
wire   [8:0] out_channel_cast1_fu_389_p1;
reg   [8:0] out_channel_cast1_reg_1954;
wire   [2:0] out_channel_1_fu_399_p2;
reg   [2:0] out_channel_1_reg_1962;
wire   [0:0] exitcond8_fu_393_p2;
reg   [7:0] p_Val2_s_reg_1972;
wire    ap_CS_fsm_state3;
wire  signed [7:0] p_Val2_39_cast_cas_fu_420_p1;
reg  signed [7:0] p_Val2_39_cast_cas_reg_1977;
wire   [4:0] out_y_1_fu_434_p2;
reg   [4:0] out_y_1_reg_1985;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_72_fu_440_p2;
reg   [0:0] tmp_72_reg_1990;
wire   [0:0] exitcond9_fu_428_p2;
wire   [9:0] tmp_101_cast_fu_460_p1;
reg   [9:0] tmp_101_cast_reg_1994;
wire   [1:0] tmp_99_fu_463_p1;
reg   [1:0] tmp_99_reg_2000;
wire    ap_CS_fsm_state5;
wire   [4:0] out_x_1_fu_473_p2;
reg   [4:0] out_x_1_reg_2011;
wire  signed [11:0] p_Val2_41_cast_fu_491_p1;
wire   [0:0] exitcond1_fu_467_p2;
wire   [2:0] filter_y_1_fu_501_p2;
reg   [2:0] filter_y_1_reg_2024;
wire    ap_CS_fsm_state6;
wire   [7:0] next_mul_fu_507_p2;
reg   [7:0] next_mul_reg_2029;
wire   [0:0] exitcond3_fu_495_p2;
wire   [7:0] index_weight_fu_523_p2;
reg   [7:0] index_weight_reg_2034;
wire   [9:0] index_data_fu_528_p3;
reg   [9:0] index_data_reg_2042;
wire   [11:0] pool_window_row_0_V_5_fu_589_p3;
reg   [11:0] pool_window_row_0_V_5_reg_2060;
wire   [11:0] pool_window_row_0_V_8_fu_613_p3;
reg   [11:0] pool_window_row_0_V_8_reg_2067;
wire   [11:0] pool_window_row_0_V_15_fu_629_p3;
reg   [11:0] pool_window_row_0_V_15_reg_2074;
wire   [11:0] pool_window_row_0_V_3_fu_637_p3;
reg   [11:0] pool_window_row_0_V_3_reg_2081;
wire   [0:0] tmp_75_fu_645_p2;
reg   [0:0] tmp_75_reg_2088;
reg   [8:0] outpool_V_addr_reg_2092;
wire  signed [17:0] p_Val2_s_45_fu_698_p2;
reg  signed [17:0] p_Val2_s_45_reg_2097;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_102_reg_2102;
wire  signed [17:0] p_Val2_37_0_1_fu_896_p2;
reg  signed [17:0] p_Val2_37_0_1_reg_2117;
wire    ap_CS_fsm_state8;
wire   [20:0] tmp_157_0_1_fu_926_p3;
reg   [20:0] tmp_157_0_1_reg_2122;
reg   [0:0] tmp_106_reg_2127;
wire  signed [17:0] p_Val2_37_0_2_fu_1117_p2;
reg  signed [17:0] p_Val2_37_0_2_reg_2142;
wire    ap_CS_fsm_state9;
wire   [20:0] tmp_157_0_2_fu_1147_p3;
reg   [20:0] tmp_157_0_2_reg_2147;
reg   [0:0] tmp_110_reg_2152;
wire  signed [17:0] p_Val2_37_0_3_fu_1338_p2;
reg  signed [17:0] p_Val2_37_0_3_reg_2167;
wire    ap_CS_fsm_state10;
wire   [20:0] tmp_157_0_3_fu_1368_p3;
reg   [20:0] tmp_157_0_3_reg_2172;
reg   [0:0] tmp_114_reg_2177;
wire  signed [17:0] p_Val2_37_0_4_fu_1559_p2;
reg  signed [17:0] p_Val2_37_0_4_reg_2192;
wire    ap_CS_fsm_state11;
wire   [20:0] tmp_157_0_4_fu_1589_p3;
reg   [20:0] tmp_157_0_4_reg_2197;
reg   [0:0] tmp_118_reg_2202;
wire   [11:0] current_el_V_0_4_fu_1768_p3;
wire    ap_CS_fsm_state12;
reg   [11:0] max_y_V_reg_2212;
wire    ap_CS_fsm_state13;
wire   [2:0] i_7_fu_1782_p2;
wire    ap_CS_fsm_state14;
wire   [11:0] p_058_2_50_fu_1808_p3;
wire   [0:0] exitcond_fu_1776_p2;
wire   [2:0] i_6_fu_1843_p2;
wire    ap_CS_fsm_state15;
wire   [11:0] p_s_48_fu_1869_p3;
wire   [0:0] exitcond4_fu_1837_p2;
reg   [2:0] out_channel_reg_262;
reg   [4:0] out_y_reg_273;
reg   [4:0] out_x_reg_285;
reg   [11:0] pool_window_row_3_V_reg_297;
reg   [2:0] filter_y_reg_307;
reg   [7:0] phi_mul_reg_318;
reg   [11:0] p_058_2_reg_329;
reg   [2:0] i1_reg_341;
reg   [11:0] p_s_reg_352;
reg   [2:0] i_reg_364;
wire   [63:0] tmp_s_fu_405_p1;
wire   [63:0] tmp_77_fu_536_p1;
wire   [63:0] tmp_78_fu_541_p1;
wire   [63:0] tmp_87_fu_685_p1;
wire   [63:0] tmp_154_0_1_fu_722_p1;
wire   [63:0] tmp_155_0_1_fu_727_p1;
wire   [63:0] tmp_154_0_2_fu_952_p1;
wire   [63:0] tmp_155_0_2_fu_957_p1;
wire   [63:0] tmp_154_0_3_fu_1173_p1;
wire   [63:0] tmp_155_0_3_fu_1178_p1;
wire   [63:0] tmp_154_0_4_fu_1394_p1;
wire   [63:0] tmp_155_0_4_fu_1399_p1;
wire   [63:0] tmp_90_fu_1912_p1;
reg   [11:0] pool_window_row_0_V_1_fu_122;
reg   [11:0] pool_window_row_0_V_2_fu_126;
reg   [11:0] pool_window_row_0_V_9_fu_130;
reg   [11:0] pool_window_row_0_V_12_fu_134;
wire   [0:0] tmp_93_fu_1816_p2;
wire   [6:0] tmp_91_fu_410_p4;
wire   [1:0] tmp_98_fu_424_p1;
wire   [2:0] p_lshr_f_cast_fu_446_p4;
wire   [8:0] grp_fu_1917_p3;
wire   [0:0] tmp_100_fu_479_p1;
wire   [7:0] tmp_102_cast_cast_fu_482_p1;
wire   [7:0] p_Val2_29_fu_486_p2;
wire   [4:0] tmp_38_cast_fu_513_p1;
wire   [4:0] tmp_76_fu_517_p2;
wire   [0:0] sel_tmp_fu_558_p2;
wire   [0:0] sel_tmp6_fu_571_p2;
wire   [11:0] pool_window_row_0_V_fu_563_p3;
wire   [0:0] sel_tmp8_fu_584_p2;
wire   [11:0] pool_window_row_0_V_4_fu_576_p3;
wire   [11:0] pool_window_row_0_V_6_fu_597_p3;
wire   [11:0] pool_window_row_0_V_7_fu_605_p3;
wire   [11:0] pool_window_row_0_V_14_fu_621_p3;
wire   [2:0] grp_fu_375_p4;
wire   [5:0] p_shl_fu_654_p3;
wire   [6:0] p_shl_cast_fu_662_p1;
wire   [6:0] tmp_105_cast1_fu_650_p1;
wire   [6:0] tmp_85_fu_666_p2;
wire  signed [9:0] tmp_106_cast_fu_672_p1;
wire   [9:0] tmp_86_fu_676_p2;
wire  signed [31:0] tmp_107_cast_fu_681_p1;
wire  signed [8:0] p_Val2_s_45_fu_698_p0;
wire  signed [8:0] p_Val2_s_45_fu_698_p1;
wire   [9:0] index_data_0_1_fu_717_p2;
wire   [7:0] index_weight_0_1_fu_712_p2;
wire   [20:0] tmp_79_fu_732_p3;
wire  signed [21:0] tmp_80_fu_744_p1;
wire  signed [21:0] tmp_157_cast_fu_740_p1;
wire   [21:0] p_Val2_18_fu_747_p2;
wire   [11:0] tmp_81_fu_771_p1;
wire   [11:0] p_Val2_19_fu_761_p4;
wire   [11:0] p_Val2_20_fu_782_p2;
wire   [0:0] tmp_104_fu_788_p3;
wire   [0:0] tmp_103_fu_774_p3;
wire   [0:0] tmp_82_fu_796_p2;
wire   [0:0] tmp_101_fu_753_p3;
wire   [0:0] carry_7_fu_802_p2;
wire   [0:0] tmp_83_fu_808_p2;
wire   [0:0] p_Result_50_not_fu_822_p2;
wire   [0:0] p_not_i_i_fu_834_p2;
wire   [0:0] brmerge_i_i_fu_840_p2;
wire   [0:0] deleted_ones_fu_814_p3;
wire   [0:0] brmerge40_demorgan_i_fu_852_p2;
wire   [0:0] tmp_84_fu_828_p2;
wire   [0:0] tmp28_fu_858_p2;
wire   [0:0] underflow_fu_864_p2;
wire   [0:0] overflow_fu_846_p2;
wire   [0:0] tmp29_fu_876_p2;
wire  signed [8:0] p_Val2_37_0_1_fu_896_p0;
wire  signed [8:0] p_Val2_37_0_1_fu_896_p1;
wire   [0:0] brmerge_i_i_i_fu_870_p2;
wire   [0:0] underflow_0_0_not_fu_882_p2;
wire   [11:0] tmp_fu_902_p3;
wire   [11:0] tmp_61_fu_910_p3;
wire   [11:0] tmp_62_fu_918_p3;
wire   [9:0] index_data_0_2_fu_947_p2;
wire   [7:0] index_weight_0_2_fu_942_p2;
wire  signed [21:0] tmp_158_0_1_fu_965_p1;
wire  signed [21:0] tmp_157_0_1_cast_fu_962_p1;
wire   [21:0] p_Val2_38_0_1_fu_968_p2;
wire   [11:0] tmp_161_0_1_fu_992_p1;
wire   [11:0] p_Val2_39_0_1_fu_982_p4;
wire   [11:0] p_Val2_40_0_1_fu_1003_p2;
wire   [0:0] tmp_108_fu_1009_p3;
wire   [0:0] tmp_107_fu_995_p3;
wire   [0:0] tmp_165_0_1_fu_1017_p2;
wire   [0:0] tmp_105_fu_974_p3;
wire   [0:0] carry_7_0_1_fu_1023_p2;
wire   [0:0] tmp_167_0_1_fu_1029_p2;
wire   [0:0] p_Result_50_0_1_no_fu_1043_p2;
wire   [0:0] p_not_i_i_0_1_fu_1055_p2;
wire   [0:0] brmerge_i_i_0_1_fu_1061_p2;
wire   [0:0] deleted_ones_0_1_fu_1035_p3;
wire   [0:0] brmerge40_demorgan_i_1_fu_1073_p2;
wire   [0:0] tmp_168_0_1_fu_1049_p2;
wire   [0:0] tmp30_fu_1079_p2;
wire   [0:0] underflow_0_1_fu_1085_p2;
wire   [0:0] overflow_0_1_fu_1067_p2;
wire   [0:0] tmp31_fu_1097_p2;
wire  signed [8:0] p_Val2_37_0_2_fu_1117_p0;
wire  signed [8:0] p_Val2_37_0_2_fu_1117_p1;
wire   [0:0] brmerge_i_i_i_0_1_fu_1091_p2;
wire   [0:0] underflow_0_1_not_fu_1103_p2;
wire   [11:0] tmp_63_fu_1123_p3;
wire   [11:0] tmp_64_fu_1131_p3;
wire   [11:0] tmp_65_fu_1139_p3;
wire   [9:0] index_data_0_3_fu_1168_p2;
wire   [7:0] index_weight_0_3_fu_1163_p2;
wire  signed [21:0] tmp_158_0_2_fu_1186_p1;
wire  signed [21:0] tmp_157_0_2_cast_fu_1183_p1;
wire   [21:0] p_Val2_38_0_2_fu_1189_p2;
wire   [11:0] tmp_161_0_2_fu_1213_p1;
wire   [11:0] p_Val2_39_0_2_fu_1203_p4;
wire   [11:0] p_Val2_40_0_2_fu_1224_p2;
wire   [0:0] tmp_112_fu_1230_p3;
wire   [0:0] tmp_111_fu_1216_p3;
wire   [0:0] tmp_165_0_2_fu_1238_p2;
wire   [0:0] tmp_109_fu_1195_p3;
wire   [0:0] carry_7_0_2_fu_1244_p2;
wire   [0:0] tmp_167_0_2_fu_1250_p2;
wire   [0:0] p_Result_50_0_2_no_fu_1264_p2;
wire   [0:0] p_not_i_i_0_2_fu_1276_p2;
wire   [0:0] brmerge_i_i_0_2_fu_1282_p2;
wire   [0:0] deleted_ones_0_2_fu_1256_p3;
wire   [0:0] brmerge40_demorgan_i_2_fu_1294_p2;
wire   [0:0] tmp_168_0_2_fu_1270_p2;
wire   [0:0] tmp32_fu_1300_p2;
wire   [0:0] underflow_0_2_fu_1306_p2;
wire   [0:0] overflow_0_2_fu_1288_p2;
wire   [0:0] tmp33_fu_1318_p2;
wire  signed [8:0] p_Val2_37_0_3_fu_1338_p0;
wire  signed [8:0] p_Val2_37_0_3_fu_1338_p1;
wire   [0:0] brmerge_i_i_i_0_2_fu_1312_p2;
wire   [0:0] underflow_0_2_not_fu_1324_p2;
wire   [11:0] tmp_66_fu_1344_p3;
wire   [11:0] tmp_67_fu_1352_p3;
wire   [11:0] tmp_68_fu_1360_p3;
wire   [9:0] index_data_0_4_fu_1389_p2;
wire   [7:0] index_weight_0_4_fu_1384_p2;
wire  signed [21:0] tmp_158_0_3_fu_1407_p1;
wire  signed [21:0] tmp_157_0_3_cast_fu_1404_p1;
wire   [21:0] p_Val2_38_0_3_fu_1410_p2;
wire   [11:0] tmp_161_0_3_fu_1434_p1;
wire   [11:0] p_Val2_39_0_3_fu_1424_p4;
wire   [11:0] p_Val2_40_0_3_fu_1445_p2;
wire   [0:0] tmp_116_fu_1451_p3;
wire   [0:0] tmp_115_fu_1437_p3;
wire   [0:0] tmp_165_0_3_fu_1459_p2;
wire   [0:0] tmp_113_fu_1416_p3;
wire   [0:0] carry_7_0_3_fu_1465_p2;
wire   [0:0] tmp_167_0_3_fu_1471_p2;
wire   [0:0] p_Result_50_0_3_no_fu_1485_p2;
wire   [0:0] p_not_i_i_0_3_fu_1497_p2;
wire   [0:0] brmerge_i_i_0_3_fu_1503_p2;
wire   [0:0] deleted_ones_0_3_fu_1477_p3;
wire   [0:0] brmerge40_demorgan_i_3_fu_1515_p2;
wire   [0:0] tmp_168_0_3_fu_1491_p2;
wire   [0:0] tmp34_fu_1521_p2;
wire   [0:0] underflow_0_3_fu_1527_p2;
wire   [0:0] overflow_0_3_fu_1509_p2;
wire   [0:0] tmp35_fu_1539_p2;
wire  signed [8:0] p_Val2_37_0_4_fu_1559_p0;
wire  signed [8:0] p_Val2_37_0_4_fu_1559_p1;
wire   [0:0] brmerge_i_i_i_0_3_fu_1533_p2;
wire   [0:0] underflow_0_3_not_fu_1545_p2;
wire   [11:0] tmp_69_fu_1565_p3;
wire   [11:0] tmp_70_fu_1573_p3;
wire   [11:0] tmp_71_fu_1581_p3;
wire  signed [21:0] tmp_158_0_4_fu_1608_p1;
wire  signed [21:0] tmp_157_0_4_cast_fu_1605_p1;
wire   [21:0] p_Val2_38_0_4_fu_1611_p2;
wire   [11:0] tmp_161_0_4_fu_1635_p1;
wire   [11:0] p_Val2_39_0_4_fu_1625_p4;
wire   [11:0] p_Val2_40_0_4_fu_1646_p2;
wire   [0:0] tmp_120_fu_1652_p3;
wire   [0:0] tmp_119_fu_1638_p3;
wire   [0:0] tmp_165_0_4_fu_1660_p2;
wire   [0:0] tmp_117_fu_1617_p3;
wire   [0:0] carry_7_0_4_fu_1666_p2;
wire   [0:0] tmp_167_0_4_fu_1672_p2;
wire   [0:0] p_Result_50_0_4_no_fu_1686_p2;
wire   [0:0] p_not_i_i_0_4_fu_1698_p2;
wire   [0:0] brmerge_i_i_0_4_fu_1704_p2;
wire   [0:0] deleted_ones_0_4_fu_1678_p3;
wire   [0:0] brmerge40_demorgan_i_4_fu_1716_p2;
wire   [0:0] tmp_168_0_4_fu_1692_p2;
wire   [0:0] tmp36_fu_1722_p2;
wire   [0:0] underflow_0_4_fu_1728_p2;
wire   [0:0] overflow_0_4_fu_1710_p2;
wire   [0:0] tmp37_fu_1740_p2;
wire   [0:0] brmerge_i_i_i_0_4_fu_1734_p2;
wire   [0:0] underflow_0_4_not_fu_1746_p2;
wire   [11:0] p_Val2_40_0_4_mux_fu_1752_p3;
wire   [11:0] p_Val2_40_0_4_46_fu_1760_p3;
wire   [1:0] max_V_1_fu_1792_p5;
wire   [11:0] max_V_1_fu_1792_p6;
wire   [0:0] tmp_94_fu_1802_p2;
wire   [1:0] max_V_fu_1853_p5;
wire   [11:0] max_V_fu_1853_p6;
wire   [0:0] tmp_92_fu_1863_p2;
wire   [5:0] p_shl4_fu_1881_p3;
wire   [6:0] p_shl4_cast_fu_1889_p1;
wire   [6:0] tmp_109_cast1_fu_1877_p1;
wire   [6:0] tmp_88_fu_1893_p2;
wire  signed [9:0] tmp_110_cast_fu_1899_p1;
wire   [9:0] tmp_89_fu_1903_p2;
wire  signed [31:0] tmp_111_cast_fu_1908_p1;
wire   [2:0] grp_fu_1917_p0;
wire   [6:0] grp_fu_1917_p1;
wire   [2:0] grp_fu_1917_p2;
reg   [14:0] ap_NS_fsm;
wire   [8:0] grp_fu_1917_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
end

convolve_biases_cbkb #(
    .DataWidth( 8 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
biases_convolution_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_convolution_V_address0),
    .ce0(biases_convolution_V_ce0),
    .q0(biases_convolution_V_q0)
);

convolve_weights_cud #(
    .DataWidth( 9 ),
    .AddressRange( 175 ),
    .AddressWidth( 8 ))
weights_convolution_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_convolution_s_address0),
    .ce0(weights_convolution_s_ce0),
    .q0(weights_convolution_s_q0)
);

dev_digits_classidEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
dev_digits_classidEe_U1(
    .din0(pool_window_row_0_V_3_reg_2081),
    .din1(pool_window_row_0_V_15_reg_2074),
    .din2(pool_window_row_0_V_8_reg_2067),
    .din3(pool_window_row_0_V_5_reg_2060),
    .din4(max_V_1_fu_1792_p5),
    .dout(max_V_1_fu_1792_p6)
);

dev_digits_classidEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
dev_digits_classidEe_U2(
    .din0(pool_window_row_0_V_3_reg_2081),
    .din1(pool_window_row_0_V_15_reg_2074),
    .din2(pool_window_row_0_V_8_reg_2067),
    .din3(pool_window_row_0_V_5_reg_2060),
    .din4(max_V_fu_1853_p5),
    .dout(max_V_fu_1853_p6)
);

dev_digits_classieOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 3 ),
    .dout_WIDTH( 9 ))
dev_digits_classieOg_U3(
    .din0(grp_fu_1917_p0),
    .din1(grp_fu_1917_p1),
    .din2(grp_fu_1917_p2),
    .dout(grp_fu_1917_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        filter_y_reg_307 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        filter_y_reg_307 <= filter_y_1_reg_2024;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_1990 == 1'd0) & (exitcond_fu_1776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (tmp_75_reg_2088 == 1'd1))) begin
        i1_reg_341 <= i_7_fu_1782_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i1_reg_341 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_1990 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_75_fu_645_p2 == 1'd1) & (exitcond3_fu_495_p2 == 1'd1))) begin
        i_reg_364 <= 3'd0;
    end else if (((exitcond4_fu_1837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        i_reg_364 <= i_6_fu_1843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_channel_reg_262 <= out_channel_1_reg_1962;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_channel_reg_262 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & ((tmp_72_reg_1990 == 1'd1) | (tmp_75_reg_2088 == 1'd0) | (exitcond_fu_1776_p2 == 1'd1)))) begin
        out_x_reg_285 <= out_x_1_reg_2011;
    end else if (((exitcond9_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        out_x_reg_285 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond1_fu_467_p2 == 1'd1))) begin
        out_y_reg_273 <= out_y_1_reg_1985;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        out_y_reg_273 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_1990 == 1'd0) & (exitcond_fu_1776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (tmp_75_reg_2088 == 1'd1))) begin
        p_058_2_reg_329 <= p_058_2_50_fu_1808_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_058_2_reg_329 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_1990 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_75_fu_645_p2 == 1'd1) & (exitcond3_fu_495_p2 == 1'd1))) begin
        p_s_reg_352 <= 12'd0;
    end else if (((exitcond4_fu_1837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        p_s_reg_352 <= p_s_48_fu_1869_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul_reg_318 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        phi_mul_reg_318 <= next_mul_reg_2029;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_467_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        pool_window_row_3_V_reg_297 <= p_Val2_41_cast_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pool_window_row_3_V_reg_297 <= current_el_V_0_4_fu_1768_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        filter_y_1_reg_2024 <= filter_y_1_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        index_data_reg_2042 <= index_data_fu_528_p3;
        index_weight_reg_2034 <= index_weight_fu_523_p2;
        next_mul_reg_2029 <= next_mul_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_y_V_reg_2212 <= outpool_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_channel_1_reg_1962 <= out_channel_1_fu_399_p2;
        out_channel_cast1_reg_1954[2 : 0] <= out_channel_cast1_fu_389_p1[2 : 0];
        out_channel_cast_reg_1949[2 : 0] <= out_channel_cast_fu_385_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_x_1_reg_2011 <= out_x_1_fu_473_p2;
        tmp_99_reg_2000 <= tmp_99_fu_463_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_y_1_reg_1985 <= out_y_1_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_72_reg_1990 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_75_fu_645_p2 == 1'd1) & (exitcond3_fu_495_p2 == 1'd1))) begin
        outpool_V_addr_reg_2092 <= tmp_87_fu_685_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Val2_37_0_1_reg_2117 <= p_Val2_37_0_1_fu_896_p2;
        tmp_106_reg_2127 <= p_Val2_37_0_1_fu_896_p2[32'd8];
        tmp_157_0_1_reg_2122[20 : 9] <= tmp_157_0_1_fu_926_p3[20 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_Val2_37_0_2_reg_2142 <= p_Val2_37_0_2_fu_1117_p2;
        tmp_110_reg_2152 <= p_Val2_37_0_2_fu_1117_p2[32'd8];
        tmp_157_0_2_reg_2147[20 : 9] <= tmp_157_0_2_fu_1147_p3[20 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Val2_37_0_3_reg_2167 <= p_Val2_37_0_3_fu_1338_p2;
        tmp_114_reg_2177 <= p_Val2_37_0_3_fu_1338_p2[32'd8];
        tmp_157_0_3_reg_2172[20 : 9] <= tmp_157_0_3_fu_1368_p3[20 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_Val2_37_0_4_reg_2192 <= p_Val2_37_0_4_fu_1559_p2;
        tmp_118_reg_2202 <= p_Val2_37_0_4_fu_1559_p2[32'd8];
        tmp_157_0_4_reg_2197[20 : 9] <= tmp_157_0_4_fu_1589_p3[20 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Val2_39_cast_cas_reg_1977 <= p_Val2_39_cast_cas_fu_420_p1;
        p_Val2_s_reg_1972 <= biases_convolution_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_s_45_reg_2097 <= p_Val2_s_45_fu_698_p2;
        tmp_102_reg_2102 <= p_Val2_s_45_fu_698_p2[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & ((tmp_72_reg_1990 == 1'd1) | (tmp_75_reg_2088 == 1'd0) | (exitcond_fu_1776_p2 == 1'd1)))) begin
        pool_window_row_0_V_12_fu_134 <= pool_window_row_0_V_5_reg_2060;
        pool_window_row_0_V_1_fu_122 <= pool_window_row_0_V_3_reg_2081;
        pool_window_row_0_V_2_fu_126 <= pool_window_row_0_V_15_reg_2074;
        pool_window_row_0_V_9_fu_130 <= pool_window_row_0_V_8_reg_2067;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_495_p2 == 1'd1))) begin
        pool_window_row_0_V_15_reg_2074 <= pool_window_row_0_V_15_fu_629_p3;
        pool_window_row_0_V_3_reg_2081 <= pool_window_row_0_V_3_fu_637_p3;
        pool_window_row_0_V_5_reg_2060 <= pool_window_row_0_V_5_fu_589_p3;
        pool_window_row_0_V_8_reg_2067 <= pool_window_row_0_V_8_fu_613_p3;
        tmp_75_reg_2088 <= tmp_75_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond9_fu_428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_101_cast_reg_1994[8 : 0] <= tmp_101_cast_fu_460_p1[8 : 0];
        tmp_72_reg_1990 <= tmp_72_fu_440_p2;
    end
end

always @ (*) begin
    if ((((exitcond8_fu_393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_fu_393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        biases_convolution_V_ce0 = 1'b1;
    end else begin
        biases_convolution_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        in_V_address0 = tmp_154_0_4_fu_1394_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        in_V_address0 = tmp_154_0_3_fu_1173_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_V_address0 = tmp_154_0_2_fu_952_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        in_V_address0 = tmp_154_0_1_fu_722_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_V_address0 = tmp_77_fu_536_p1;
    end else begin
        in_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        in_V_ce0 = 1'b1;
    end else begin
        in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        outpool_V_address0 = tmp_90_fu_1912_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outpool_V_address0 = outpool_V_addr_reg_2092;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        outpool_V_address0 = tmp_87_fu_685_p1;
    end else begin
        outpool_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state6))) begin
        outpool_V_ce0 = 1'b1;
    end else begin
        outpool_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        outpool_V_d0 = p_s_reg_352;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outpool_V_d0 = p_058_2_reg_329;
    end else begin
        outpool_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state15) & (exitcond4_fu_1837_p2 == 1'd1)) | ((tmp_72_reg_1990 == 1'd0) & (1'b1 == ap_CS_fsm_state14) & (tmp_93_fu_1816_p2 == 1'd1) & (exitcond_fu_1776_p2 == 1'd1) & (tmp_75_reg_2088 == 1'd1)))) begin
        outpool_V_we0 = 1'b1;
    end else begin
        outpool_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weights_convolution_s_address0 = tmp_155_0_4_fu_1399_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_convolution_s_address0 = tmp_155_0_3_fu_1178_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_convolution_s_address0 = tmp_155_0_2_fu_957_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        weights_convolution_s_address0 = tmp_155_0_1_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weights_convolution_s_address0 = tmp_78_fu_541_p1;
    end else begin
        weights_convolution_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        weights_convolution_s_ce0 = 1'b1;
    end else begin
        weights_convolution_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond8_fu_393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond9_fu_428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond1_fu_467_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_72_reg_1990 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_75_fu_645_p2 == 1'd1) & (exitcond3_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((tmp_72_reg_1990 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_75_fu_645_p2 == 1'd1) & (exitcond3_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((tmp_75_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & ((tmp_72_reg_1990 == 1'd1) | (tmp_75_reg_2088 == 1'd0) | (exitcond_fu_1776_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond4_fu_1837_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign biases_convolution_V_address0 = tmp_s_fu_405_p1;

assign brmerge40_demorgan_i_1_fu_1073_p2 = (tmp_108_fu_1009_p3 & deleted_ones_0_1_fu_1035_p3);

assign brmerge40_demorgan_i_2_fu_1294_p2 = (tmp_112_fu_1230_p3 & deleted_ones_0_2_fu_1256_p3);

assign brmerge40_demorgan_i_3_fu_1515_p2 = (tmp_116_fu_1451_p3 & deleted_ones_0_3_fu_1477_p3);

assign brmerge40_demorgan_i_4_fu_1716_p2 = (tmp_120_fu_1652_p3 & deleted_ones_0_4_fu_1678_p3);

assign brmerge40_demorgan_i_fu_852_p2 = (tmp_104_fu_788_p3 & deleted_ones_fu_814_p3);

assign brmerge_i_i_0_1_fu_1061_p2 = (tmp_108_fu_1009_p3 | p_not_i_i_0_1_fu_1055_p2);

assign brmerge_i_i_0_2_fu_1282_p2 = (tmp_112_fu_1230_p3 | p_not_i_i_0_2_fu_1276_p2);

assign brmerge_i_i_0_3_fu_1503_p2 = (tmp_116_fu_1451_p3 | p_not_i_i_0_3_fu_1497_p2);

assign brmerge_i_i_0_4_fu_1704_p2 = (tmp_120_fu_1652_p3 | p_not_i_i_0_4_fu_1698_p2);

assign brmerge_i_i_fu_840_p2 = (tmp_104_fu_788_p3 | p_not_i_i_fu_834_p2);

assign brmerge_i_i_i_0_1_fu_1091_p2 = (underflow_0_1_fu_1085_p2 | overflow_0_1_fu_1067_p2);

assign brmerge_i_i_i_0_2_fu_1312_p2 = (underflow_0_2_fu_1306_p2 | overflow_0_2_fu_1288_p2);

assign brmerge_i_i_i_0_3_fu_1533_p2 = (underflow_0_3_fu_1527_p2 | overflow_0_3_fu_1509_p2);

assign brmerge_i_i_i_0_4_fu_1734_p2 = (underflow_0_4_fu_1728_p2 | overflow_0_4_fu_1710_p2);

assign brmerge_i_i_i_fu_870_p2 = (underflow_fu_864_p2 | overflow_fu_846_p2);

assign carry_7_0_1_fu_1023_p2 = (tmp_165_0_1_fu_1017_p2 & tmp_107_fu_995_p3);

assign carry_7_0_2_fu_1244_p2 = (tmp_165_0_2_fu_1238_p2 & tmp_111_fu_1216_p3);

assign carry_7_0_3_fu_1465_p2 = (tmp_165_0_3_fu_1459_p2 & tmp_115_fu_1437_p3);

assign carry_7_0_4_fu_1666_p2 = (tmp_165_0_4_fu_1660_p2 & tmp_119_fu_1638_p3);

assign carry_7_fu_802_p2 = (tmp_82_fu_796_p2 & tmp_103_fu_774_p3);

assign current_el_V_0_4_fu_1768_p3 = ((underflow_0_4_not_fu_1746_p2[0:0] === 1'b1) ? p_Val2_40_0_4_mux_fu_1752_p3 : p_Val2_40_0_4_46_fu_1760_p3);

assign deleted_ones_0_1_fu_1035_p3 = ((carry_7_0_1_fu_1023_p2[0:0] === 1'b1) ? tmp_167_0_1_fu_1029_p2 : tmp_105_fu_974_p3);

assign deleted_ones_0_2_fu_1256_p3 = ((carry_7_0_2_fu_1244_p2[0:0] === 1'b1) ? tmp_167_0_2_fu_1250_p2 : tmp_109_fu_1195_p3);

assign deleted_ones_0_3_fu_1477_p3 = ((carry_7_0_3_fu_1465_p2[0:0] === 1'b1) ? tmp_167_0_3_fu_1471_p2 : tmp_113_fu_1416_p3);

assign deleted_ones_0_4_fu_1678_p3 = ((carry_7_0_4_fu_1666_p2[0:0] === 1'b1) ? tmp_167_0_4_fu_1672_p2 : tmp_117_fu_1617_p3);

assign deleted_ones_fu_814_p3 = ((carry_7_fu_802_p2[0:0] === 1'b1) ? tmp_83_fu_808_p2 : tmp_101_fu_753_p3);

assign exitcond1_fu_467_p2 = ((out_x_reg_285 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond3_fu_495_p2 = ((filter_y_reg_307 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond4_fu_1837_p2 = ((i_reg_364 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond8_fu_393_p2 = ((out_channel_reg_262 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond9_fu_428_p2 = ((out_y_reg_273 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond_fu_1776_p2 = ((i1_reg_341 == 3'd4) ? 1'b1 : 1'b0);

assign filter_y_1_fu_501_p2 = (filter_y_reg_307 + 3'd1);

assign grp_fu_1917_p0 = grp_fu_1917_p00;

assign grp_fu_1917_p00 = p_lshr_f_cast_fu_446_p4;

assign grp_fu_1917_p1 = 9'd49;

assign grp_fu_1917_p2 = out_channel_cast1_reg_1954;

assign grp_fu_375_p4 = {{out_x_reg_285[4:2]}};

assign i_6_fu_1843_p2 = (i_reg_364 + 3'd1);

assign i_7_fu_1782_p2 = (i1_reg_341 + 3'd1);

assign index_data_0_1_fu_717_p2 = (index_data_reg_2042 + 10'd1);

assign index_data_0_2_fu_947_p2 = (index_data_reg_2042 + 10'd2);

assign index_data_0_3_fu_1168_p2 = (index_data_reg_2042 + 10'd3);

assign index_data_0_4_fu_1389_p2 = (index_data_reg_2042 + 10'd4);

assign index_data_fu_528_p3 = {{tmp_76_fu_517_p2}, {out_x_reg_285}};

assign index_weight_0_1_fu_712_p2 = (index_weight_reg_2034 + 8'd7);

assign index_weight_0_2_fu_942_p2 = (index_weight_reg_2034 + 8'd14);

assign index_weight_0_3_fu_1163_p2 = (index_weight_reg_2034 + 8'd21);

assign index_weight_0_4_fu_1384_p2 = (index_weight_reg_2034 + 8'd28);

assign index_weight_fu_523_p2 = (phi_mul_reg_318 + out_channel_cast_reg_1949);

assign max_V_1_fu_1792_p5 = i1_reg_341[1:0];

assign max_V_fu_1853_p5 = i_reg_364[1:0];

assign next_mul_fu_507_p2 = (phi_mul_reg_318 + 8'd35);

assign out_channel_1_fu_399_p2 = (out_channel_reg_262 + 3'd1);

assign out_channel_cast1_fu_389_p1 = out_channel_reg_262;

assign out_channel_cast_fu_385_p1 = out_channel_reg_262;

assign out_x_1_fu_473_p2 = (5'd1 + out_x_reg_285);

assign out_y_1_fu_434_p2 = (5'd1 + out_y_reg_273);

assign overflow_0_1_fu_1067_p2 = (tmp_167_0_1_fu_1029_p2 & brmerge_i_i_0_1_fu_1061_p2);

assign overflow_0_2_fu_1288_p2 = (tmp_167_0_2_fu_1250_p2 & brmerge_i_i_0_2_fu_1282_p2);

assign overflow_0_3_fu_1509_p2 = (tmp_167_0_3_fu_1471_p2 & brmerge_i_i_0_3_fu_1503_p2);

assign overflow_0_4_fu_1710_p2 = (tmp_167_0_4_fu_1672_p2 & brmerge_i_i_0_4_fu_1704_p2);

assign overflow_fu_846_p2 = (tmp_83_fu_808_p2 & brmerge_i_i_fu_840_p2);

assign p_058_2_50_fu_1808_p3 = ((tmp_94_fu_1802_p2[0:0] === 1'b1) ? max_V_1_fu_1792_p6 : p_058_2_reg_329);

assign p_Result_50_0_1_no_fu_1043_p2 = (tmp_107_fu_995_p3 ^ 1'd1);

assign p_Result_50_0_2_no_fu_1264_p2 = (tmp_111_fu_1216_p3 ^ 1'd1);

assign p_Result_50_0_3_no_fu_1485_p2 = (tmp_115_fu_1437_p3 ^ 1'd1);

assign p_Result_50_0_4_no_fu_1686_p2 = (tmp_119_fu_1638_p3 ^ 1'd1);

assign p_Result_50_not_fu_822_p2 = (tmp_103_fu_774_p3 ^ 1'd1);

assign p_Val2_18_fu_747_p2 = ($signed(tmp_80_fu_744_p1) + $signed(tmp_157_cast_fu_740_p1));

assign p_Val2_19_fu_761_p4 = {{p_Val2_18_fu_747_p2[20:9]}};

assign p_Val2_20_fu_782_p2 = (tmp_81_fu_771_p1 + p_Val2_19_fu_761_p4);

assign p_Val2_29_fu_486_p2 = ($signed(tmp_102_cast_cast_fu_482_p1) + $signed(p_Val2_39_cast_cas_reg_1977));

assign p_Val2_37_0_1_fu_896_p0 = weights_convolution_s_q0;

assign p_Val2_37_0_1_fu_896_p1 = in_V_q0;

assign p_Val2_37_0_1_fu_896_p2 = ($signed(p_Val2_37_0_1_fu_896_p0) * $signed(p_Val2_37_0_1_fu_896_p1));

assign p_Val2_37_0_2_fu_1117_p0 = weights_convolution_s_q0;

assign p_Val2_37_0_2_fu_1117_p1 = in_V_q0;

assign p_Val2_37_0_2_fu_1117_p2 = ($signed(p_Val2_37_0_2_fu_1117_p0) * $signed(p_Val2_37_0_2_fu_1117_p1));

assign p_Val2_37_0_3_fu_1338_p0 = weights_convolution_s_q0;

assign p_Val2_37_0_3_fu_1338_p1 = in_V_q0;

assign p_Val2_37_0_3_fu_1338_p2 = ($signed(p_Val2_37_0_3_fu_1338_p0) * $signed(p_Val2_37_0_3_fu_1338_p1));

assign p_Val2_37_0_4_fu_1559_p0 = weights_convolution_s_q0;

assign p_Val2_37_0_4_fu_1559_p1 = in_V_q0;

assign p_Val2_37_0_4_fu_1559_p2 = ($signed(p_Val2_37_0_4_fu_1559_p0) * $signed(p_Val2_37_0_4_fu_1559_p1));

assign p_Val2_38_0_1_fu_968_p2 = ($signed(tmp_158_0_1_fu_965_p1) + $signed(tmp_157_0_1_cast_fu_962_p1));

assign p_Val2_38_0_2_fu_1189_p2 = ($signed(tmp_158_0_2_fu_1186_p1) + $signed(tmp_157_0_2_cast_fu_1183_p1));

assign p_Val2_38_0_3_fu_1410_p2 = ($signed(tmp_158_0_3_fu_1407_p1) + $signed(tmp_157_0_3_cast_fu_1404_p1));

assign p_Val2_38_0_4_fu_1611_p2 = ($signed(tmp_158_0_4_fu_1608_p1) + $signed(tmp_157_0_4_cast_fu_1605_p1));

assign p_Val2_39_0_1_fu_982_p4 = {{p_Val2_38_0_1_fu_968_p2[20:9]}};

assign p_Val2_39_0_2_fu_1203_p4 = {{p_Val2_38_0_2_fu_1189_p2[20:9]}};

assign p_Val2_39_0_3_fu_1424_p4 = {{p_Val2_38_0_3_fu_1410_p2[20:9]}};

assign p_Val2_39_0_4_fu_1625_p4 = {{p_Val2_38_0_4_fu_1611_p2[20:9]}};

assign p_Val2_39_cast_cas_fu_420_p1 = $signed(tmp_91_fu_410_p4);

assign p_Val2_40_0_1_fu_1003_p2 = (tmp_161_0_1_fu_992_p1 + p_Val2_39_0_1_fu_982_p4);

assign p_Val2_40_0_2_fu_1224_p2 = (tmp_161_0_2_fu_1213_p1 + p_Val2_39_0_2_fu_1203_p4);

assign p_Val2_40_0_3_fu_1445_p2 = (tmp_161_0_3_fu_1434_p1 + p_Val2_39_0_3_fu_1424_p4);

assign p_Val2_40_0_4_46_fu_1760_p3 = ((underflow_0_4_fu_1728_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_40_0_4_fu_1646_p2);

assign p_Val2_40_0_4_fu_1646_p2 = (tmp_161_0_4_fu_1635_p1 + p_Val2_39_0_4_fu_1625_p4);

assign p_Val2_40_0_4_mux_fu_1752_p3 = ((brmerge_i_i_i_0_4_fu_1734_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_40_0_4_fu_1646_p2);

assign p_Val2_41_cast_fu_491_p1 = $signed(p_Val2_29_fu_486_p2);

assign p_Val2_s_45_fu_698_p0 = weights_convolution_s_q0;

assign p_Val2_s_45_fu_698_p1 = in_V_q0;

assign p_Val2_s_45_fu_698_p2 = ($signed(p_Val2_s_45_fu_698_p0) * $signed(p_Val2_s_45_fu_698_p1));

assign p_lshr_f_cast_fu_446_p4 = {{out_y_reg_273[4:2]}};

assign p_not_i_i_0_1_fu_1055_p2 = (tmp_105_fu_974_p3 ^ carry_7_0_1_fu_1023_p2);

assign p_not_i_i_0_2_fu_1276_p2 = (tmp_109_fu_1195_p3 ^ carry_7_0_2_fu_1244_p2);

assign p_not_i_i_0_3_fu_1497_p2 = (tmp_113_fu_1416_p3 ^ carry_7_0_3_fu_1465_p2);

assign p_not_i_i_0_4_fu_1698_p2 = (tmp_117_fu_1617_p3 ^ carry_7_0_4_fu_1666_p2);

assign p_not_i_i_fu_834_p2 = (tmp_101_fu_753_p3 ^ carry_7_fu_802_p2);

assign p_s_48_fu_1869_p3 = ((tmp_92_fu_1863_p2[0:0] === 1'b1) ? max_V_fu_1853_p6 : p_s_reg_352);

assign p_shl4_cast_fu_1889_p1 = p_shl4_fu_1881_p3;

assign p_shl4_fu_1881_p3 = {{grp_fu_375_p4}, {3'd0}};

assign p_shl_cast_fu_662_p1 = p_shl_fu_654_p3;

assign p_shl_fu_654_p3 = {{grp_fu_375_p4}, {3'd0}};

assign pool_window_row_0_V_14_fu_621_p3 = ((sel_tmp6_fu_571_p2[0:0] === 1'b1) ? pool_window_row_3_V_reg_297 : pool_window_row_0_V_2_fu_126);

assign pool_window_row_0_V_15_fu_629_p3 = ((sel_tmp8_fu_584_p2[0:0] === 1'b1) ? pool_window_row_0_V_2_fu_126 : pool_window_row_0_V_14_fu_621_p3);

assign pool_window_row_0_V_3_fu_637_p3 = ((sel_tmp8_fu_584_p2[0:0] === 1'b1) ? pool_window_row_3_V_reg_297 : pool_window_row_0_V_1_fu_122);

assign pool_window_row_0_V_4_fu_576_p3 = ((sel_tmp6_fu_571_p2[0:0] === 1'b1) ? pool_window_row_0_V_12_fu_134 : pool_window_row_0_V_fu_563_p3);

assign pool_window_row_0_V_5_fu_589_p3 = ((sel_tmp8_fu_584_p2[0:0] === 1'b1) ? pool_window_row_0_V_12_fu_134 : pool_window_row_0_V_4_fu_576_p3);

assign pool_window_row_0_V_6_fu_597_p3 = ((sel_tmp_fu_558_p2[0:0] === 1'b1) ? pool_window_row_3_V_reg_297 : pool_window_row_0_V_9_fu_130);

assign pool_window_row_0_V_7_fu_605_p3 = ((sel_tmp6_fu_571_p2[0:0] === 1'b1) ? pool_window_row_0_V_9_fu_130 : pool_window_row_0_V_6_fu_597_p3);

assign pool_window_row_0_V_8_fu_613_p3 = ((sel_tmp8_fu_584_p2[0:0] === 1'b1) ? pool_window_row_0_V_9_fu_130 : pool_window_row_0_V_7_fu_605_p3);

assign pool_window_row_0_V_fu_563_p3 = ((sel_tmp_fu_558_p2[0:0] === 1'b1) ? pool_window_row_0_V_12_fu_134 : pool_window_row_3_V_reg_297);

assign sel_tmp6_fu_571_p2 = ((tmp_99_reg_2000 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_584_p2 = ((tmp_99_reg_2000 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_558_p2 = ((tmp_99_reg_2000 == 2'd2) ? 1'b1 : 1'b0);

assign tmp28_fu_858_p2 = (tmp_84_fu_828_p2 ^ brmerge40_demorgan_i_fu_852_p2);

assign tmp29_fu_876_p2 = (tmp_83_fu_808_p2 | brmerge40_demorgan_i_fu_852_p2);

assign tmp30_fu_1079_p2 = (tmp_168_0_1_fu_1049_p2 ^ brmerge40_demorgan_i_1_fu_1073_p2);

assign tmp31_fu_1097_p2 = (tmp_167_0_1_fu_1029_p2 | brmerge40_demorgan_i_1_fu_1073_p2);

assign tmp32_fu_1300_p2 = (tmp_168_0_2_fu_1270_p2 ^ brmerge40_demorgan_i_2_fu_1294_p2);

assign tmp33_fu_1318_p2 = (tmp_167_0_2_fu_1250_p2 | brmerge40_demorgan_i_2_fu_1294_p2);

assign tmp34_fu_1521_p2 = (tmp_168_0_3_fu_1491_p2 ^ brmerge40_demorgan_i_3_fu_1515_p2);

assign tmp35_fu_1539_p2 = (tmp_167_0_3_fu_1471_p2 | brmerge40_demorgan_i_3_fu_1515_p2);

assign tmp36_fu_1722_p2 = (tmp_168_0_4_fu_1692_p2 ^ brmerge40_demorgan_i_4_fu_1716_p2);

assign tmp37_fu_1740_p2 = (tmp_167_0_4_fu_1672_p2 | brmerge40_demorgan_i_4_fu_1716_p2);

assign tmp_100_fu_479_p1 = p_Val2_s_reg_1972[0:0];

assign tmp_101_cast_fu_460_p1 = grp_fu_1917_p3;

assign tmp_101_fu_753_p3 = p_Val2_18_fu_747_p2[32'd21];

assign tmp_102_cast_cast_fu_482_p1 = tmp_100_fu_479_p1;

assign tmp_103_fu_774_p3 = p_Val2_18_fu_747_p2[32'd20];

assign tmp_104_fu_788_p3 = p_Val2_20_fu_782_p2[32'd11];

assign tmp_105_cast1_fu_650_p1 = grp_fu_375_p4;

assign tmp_105_fu_974_p3 = p_Val2_38_0_1_fu_968_p2[32'd21];

assign tmp_106_cast_fu_672_p1 = $signed(tmp_85_fu_666_p2);

assign tmp_107_cast_fu_681_p1 = $signed(tmp_86_fu_676_p2);

assign tmp_107_fu_995_p3 = p_Val2_38_0_1_fu_968_p2[32'd20];

assign tmp_108_fu_1009_p3 = p_Val2_40_0_1_fu_1003_p2[32'd11];

assign tmp_109_cast1_fu_1877_p1 = grp_fu_375_p4;

assign tmp_109_fu_1195_p3 = p_Val2_38_0_2_fu_1189_p2[32'd21];

assign tmp_110_cast_fu_1899_p1 = $signed(tmp_88_fu_1893_p2);

assign tmp_111_cast_fu_1908_p1 = $signed(tmp_89_fu_1903_p2);

assign tmp_111_fu_1216_p3 = p_Val2_38_0_2_fu_1189_p2[32'd20];

assign tmp_112_fu_1230_p3 = p_Val2_40_0_2_fu_1224_p2[32'd11];

assign tmp_113_fu_1416_p3 = p_Val2_38_0_3_fu_1410_p2[32'd21];

assign tmp_115_fu_1437_p3 = p_Val2_38_0_3_fu_1410_p2[32'd20];

assign tmp_116_fu_1451_p3 = p_Val2_40_0_3_fu_1445_p2[32'd11];

assign tmp_117_fu_1617_p3 = p_Val2_38_0_4_fu_1611_p2[32'd21];

assign tmp_119_fu_1638_p3 = p_Val2_38_0_4_fu_1611_p2[32'd20];

assign tmp_120_fu_1652_p3 = p_Val2_40_0_4_fu_1646_p2[32'd11];

assign tmp_154_0_1_fu_722_p1 = index_data_0_1_fu_717_p2;

assign tmp_154_0_2_fu_952_p1 = index_data_0_2_fu_947_p2;

assign tmp_154_0_3_fu_1173_p1 = index_data_0_3_fu_1168_p2;

assign tmp_154_0_4_fu_1394_p1 = index_data_0_4_fu_1389_p2;

assign tmp_155_0_1_fu_727_p1 = index_weight_0_1_fu_712_p2;

assign tmp_155_0_2_fu_957_p1 = index_weight_0_2_fu_942_p2;

assign tmp_155_0_3_fu_1178_p1 = index_weight_0_3_fu_1163_p2;

assign tmp_155_0_4_fu_1399_p1 = index_weight_0_4_fu_1384_p2;

assign tmp_157_0_1_cast_fu_962_p1 = $signed(tmp_157_0_1_reg_2122);

assign tmp_157_0_1_fu_926_p3 = {{tmp_62_fu_918_p3}, {9'd0}};

assign tmp_157_0_2_cast_fu_1183_p1 = $signed(tmp_157_0_2_reg_2147);

assign tmp_157_0_2_fu_1147_p3 = {{tmp_65_fu_1139_p3}, {9'd0}};

assign tmp_157_0_3_cast_fu_1404_p1 = $signed(tmp_157_0_3_reg_2172);

assign tmp_157_0_3_fu_1368_p3 = {{tmp_68_fu_1360_p3}, {9'd0}};

assign tmp_157_0_4_cast_fu_1605_p1 = $signed(tmp_157_0_4_reg_2197);

assign tmp_157_0_4_fu_1589_p3 = {{tmp_71_fu_1581_p3}, {9'd0}};

assign tmp_157_cast_fu_740_p1 = $signed(tmp_79_fu_732_p3);

assign tmp_158_0_1_fu_965_p1 = p_Val2_37_0_1_reg_2117;

assign tmp_158_0_2_fu_1186_p1 = p_Val2_37_0_2_reg_2142;

assign tmp_158_0_3_fu_1407_p1 = p_Val2_37_0_3_reg_2167;

assign tmp_158_0_4_fu_1608_p1 = p_Val2_37_0_4_reg_2192;

assign tmp_161_0_1_fu_992_p1 = tmp_106_reg_2127;

assign tmp_161_0_2_fu_1213_p1 = tmp_110_reg_2152;

assign tmp_161_0_3_fu_1434_p1 = tmp_114_reg_2177;

assign tmp_161_0_4_fu_1635_p1 = tmp_118_reg_2202;

assign tmp_165_0_1_fu_1017_p2 = (tmp_108_fu_1009_p3 ^ 1'd1);

assign tmp_165_0_2_fu_1238_p2 = (tmp_112_fu_1230_p3 ^ 1'd1);

assign tmp_165_0_3_fu_1459_p2 = (tmp_116_fu_1451_p3 ^ 1'd1);

assign tmp_165_0_4_fu_1660_p2 = (tmp_120_fu_1652_p3 ^ 1'd1);

assign tmp_167_0_1_fu_1029_p2 = (tmp_105_fu_974_p3 ^ 1'd1);

assign tmp_167_0_2_fu_1250_p2 = (tmp_109_fu_1195_p3 ^ 1'd1);

assign tmp_167_0_3_fu_1471_p2 = (tmp_113_fu_1416_p3 ^ 1'd1);

assign tmp_167_0_4_fu_1672_p2 = (tmp_117_fu_1617_p3 ^ 1'd1);

assign tmp_168_0_1_fu_1049_p2 = (tmp_108_fu_1009_p3 | p_Result_50_0_1_no_fu_1043_p2);

assign tmp_168_0_2_fu_1270_p2 = (tmp_112_fu_1230_p3 | p_Result_50_0_2_no_fu_1264_p2);

assign tmp_168_0_3_fu_1491_p2 = (tmp_116_fu_1451_p3 | p_Result_50_0_3_no_fu_1485_p2);

assign tmp_168_0_4_fu_1692_p2 = (tmp_120_fu_1652_p3 | p_Result_50_0_4_no_fu_1686_p2);

assign tmp_38_cast_fu_513_p1 = filter_y_reg_307;

assign tmp_61_fu_910_p3 = ((underflow_fu_864_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_20_fu_782_p2);

assign tmp_62_fu_918_p3 = ((underflow_0_0_not_fu_882_p2[0:0] === 1'b1) ? tmp_fu_902_p3 : tmp_61_fu_910_p3);

assign tmp_63_fu_1123_p3 = ((brmerge_i_i_i_0_1_fu_1091_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_40_0_1_fu_1003_p2);

assign tmp_64_fu_1131_p3 = ((underflow_0_1_fu_1085_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_40_0_1_fu_1003_p2);

assign tmp_65_fu_1139_p3 = ((underflow_0_1_not_fu_1103_p2[0:0] === 1'b1) ? tmp_63_fu_1123_p3 : tmp_64_fu_1131_p3);

assign tmp_66_fu_1344_p3 = ((brmerge_i_i_i_0_2_fu_1312_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_40_0_2_fu_1224_p2);

assign tmp_67_fu_1352_p3 = ((underflow_0_2_fu_1306_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_40_0_2_fu_1224_p2);

assign tmp_68_fu_1360_p3 = ((underflow_0_2_not_fu_1324_p2[0:0] === 1'b1) ? tmp_66_fu_1344_p3 : tmp_67_fu_1352_p3);

assign tmp_69_fu_1565_p3 = ((brmerge_i_i_i_0_3_fu_1533_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_40_0_3_fu_1445_p2);

assign tmp_70_fu_1573_p3 = ((underflow_0_3_fu_1527_p2[0:0] === 1'b1) ? 12'd2048 : p_Val2_40_0_3_fu_1445_p2);

assign tmp_71_fu_1581_p3 = ((underflow_0_3_not_fu_1545_p2[0:0] === 1'b1) ? tmp_69_fu_1565_p3 : tmp_70_fu_1573_p3);

assign tmp_72_fu_440_p2 = ((tmp_98_fu_424_p1 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_75_fu_645_p2 = ((tmp_99_reg_2000 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_76_fu_517_p2 = (tmp_38_cast_fu_513_p1 + out_y_reg_273);

assign tmp_77_fu_536_p1 = index_data_fu_528_p3;

assign tmp_78_fu_541_p1 = index_weight_fu_523_p2;

assign tmp_79_fu_732_p3 = {{pool_window_row_3_V_reg_297}, {9'd0}};

assign tmp_80_fu_744_p1 = p_Val2_s_45_reg_2097;

assign tmp_81_fu_771_p1 = tmp_102_reg_2102;

assign tmp_82_fu_796_p2 = (tmp_104_fu_788_p3 ^ 1'd1);

assign tmp_83_fu_808_p2 = (tmp_101_fu_753_p3 ^ 1'd1);

assign tmp_84_fu_828_p2 = (tmp_104_fu_788_p3 | p_Result_50_not_fu_822_p2);

assign tmp_85_fu_666_p2 = (p_shl_cast_fu_662_p1 - tmp_105_cast1_fu_650_p1);

assign tmp_86_fu_676_p2 = ($signed(tmp_106_cast_fu_672_p1) + $signed(tmp_101_cast_reg_1994));

assign tmp_87_fu_685_p1 = $unsigned(tmp_107_cast_fu_681_p1);

assign tmp_88_fu_1893_p2 = (p_shl4_cast_fu_1889_p1 - tmp_109_cast1_fu_1877_p1);

assign tmp_89_fu_1903_p2 = ($signed(tmp_110_cast_fu_1899_p1) + $signed(tmp_101_cast_reg_1994));

assign tmp_90_fu_1912_p1 = $unsigned(tmp_111_cast_fu_1908_p1);

assign tmp_91_fu_410_p4 = {{biases_convolution_V_q0[7:1]}};

assign tmp_92_fu_1863_p2 = (($signed(max_V_fu_1853_p6) > $signed(p_s_reg_352)) ? 1'b1 : 1'b0);

assign tmp_93_fu_1816_p2 = (($signed(p_058_2_reg_329) > $signed(max_y_V_reg_2212)) ? 1'b1 : 1'b0);

assign tmp_94_fu_1802_p2 = (($signed(max_V_1_fu_1792_p6) > $signed(p_058_2_reg_329)) ? 1'b1 : 1'b0);

assign tmp_98_fu_424_p1 = out_y_reg_273[1:0];

assign tmp_99_fu_463_p1 = out_x_reg_285[1:0];

assign tmp_fu_902_p3 = ((brmerge_i_i_i_fu_870_p2[0:0] === 1'b1) ? 12'd2047 : p_Val2_20_fu_782_p2);

assign tmp_s_fu_405_p1 = out_channel_reg_262;

assign underflow_0_0_not_fu_882_p2 = (tmp29_fu_876_p2 | carry_7_fu_802_p2);

assign underflow_0_1_fu_1085_p2 = (tmp_105_fu_974_p3 & tmp30_fu_1079_p2);

assign underflow_0_1_not_fu_1103_p2 = (tmp31_fu_1097_p2 | carry_7_0_1_fu_1023_p2);

assign underflow_0_2_fu_1306_p2 = (tmp_109_fu_1195_p3 & tmp32_fu_1300_p2);

assign underflow_0_2_not_fu_1324_p2 = (tmp33_fu_1318_p2 | carry_7_0_2_fu_1244_p2);

assign underflow_0_3_fu_1527_p2 = (tmp_113_fu_1416_p3 & tmp34_fu_1521_p2);

assign underflow_0_3_not_fu_1545_p2 = (tmp35_fu_1539_p2 | carry_7_0_3_fu_1465_p2);

assign underflow_0_4_fu_1728_p2 = (tmp_117_fu_1617_p3 & tmp36_fu_1722_p2);

assign underflow_0_4_not_fu_1746_p2 = (tmp37_fu_1740_p2 | carry_7_0_4_fu_1666_p2);

assign underflow_fu_864_p2 = (tmp_101_fu_753_p3 & tmp28_fu_858_p2);

always @ (posedge ap_clk) begin
    out_channel_cast_reg_1949[7:3] <= 5'b00000;
    out_channel_cast1_reg_1954[8:3] <= 6'b000000;
    tmp_101_cast_reg_1994[9] <= 1'b0;
    tmp_157_0_1_reg_2122[8:0] <= 9'b000000000;
    tmp_157_0_2_reg_2147[8:0] <= 9'b000000000;
    tmp_157_0_3_reg_2172[8:0] <= 9'b000000000;
    tmp_157_0_4_reg_2197[8:0] <= 9'b000000000;
end

endmodule //convolve
